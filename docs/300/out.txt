SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack511 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),321,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack511 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 321))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack511 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),321,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack511 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 321))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),395,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 395))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),395,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 395))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack626 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),383,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack626 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 383))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack626 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),383,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack626 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 383))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack31 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),57,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack31 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 57))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack31 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),57,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack31 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 57))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack201 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),151,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack201 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 151))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack201 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),151,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack201 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 151))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),246,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 246))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),246,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 246))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack405 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),263,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack405 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 263))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack405 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),263,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack405 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 263))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),343,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 343))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),343,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 343))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack396 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),258,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack396 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 258))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack396 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),258,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack396 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 258))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),307,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 307))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),307,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 307))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack789 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),472,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack789 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 472))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack789 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),472,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack789 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 472))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack598 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),368,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack598 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 368))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack598 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),368,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack598 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 368))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack596 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),367,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack596 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 367))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack596 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),367,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack596 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 367))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack452 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),289,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack452 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 289))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack452 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),289,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack452 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 289))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack332 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110),223,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack332 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110), 223))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack332 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110),223,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack332 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110), 223))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack494 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),312,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack494 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 312))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack494 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),312,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack494 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 312))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack609 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),374,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack609 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 374))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack609 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),374,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack609 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 374))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack183 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),141,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack183 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 141))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack183 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),141,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack183 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 141))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack315 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),214,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack315 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 214))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack315 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),214,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack315 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 214))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack855 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),508,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack855 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 508))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack855 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),508,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack855 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 508))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack602 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),370,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack602 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 370))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack602 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),370,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack602 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 370))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack234 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),170,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack234 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 170))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack234 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),170,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack234 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 170))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack295 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),203,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack295 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 203))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack295 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),203,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack295 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 203))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),108,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 108))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),108,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 108))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack681 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),413,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack681 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 413))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack681 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),413,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack681 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 413))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack778 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),466,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack778 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 466))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack778 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),466,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack778 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 466))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),460,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 460))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),460,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 460))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack661 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),402,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack661 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 402))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack661 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),402,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack661 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 402))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack550 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),342,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack550 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 342))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack550 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),342,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack550 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 342))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack443 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),284,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack443 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 284))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack443 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),284,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack443 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 284))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),84,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 84))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),84,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 84))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack42 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),63,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack42 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 63))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack42 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),63,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack42 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 63))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),222,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 222))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),222,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 222))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack93 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),92,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack93 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 92))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack93 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),92,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack93 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 92))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack398 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),259,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack398 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 259))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack398 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),259,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack398 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 259))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack154 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),125,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack154 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 125))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack154 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),125,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack154 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 125))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack853 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),507,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack853 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 507))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack853 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),507,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack853 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 507))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110),124,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110), 124))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110),124,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110), 124))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack174 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),136,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack174 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 136))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack174 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),136,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack174 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 136))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack868 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),515,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack868 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 515))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack868 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),515,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack868 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 515))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack798 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),477,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack798 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 477))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack798 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),477,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack798 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 477))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack802 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),479,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack802 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 479))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack802 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),479,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack802 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 479))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack297 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),204,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack297 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 204))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack297 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),204,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack297 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 204))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack474 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 99),301,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack474 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 99), 301))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack474 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 99),301,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack474 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 99), 301))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack800 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110),478,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack800 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110), 478))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack800 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110),478,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack800 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110), 478))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack531 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),332,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack531 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 332))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack531 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),332,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack531 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 332))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),78,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 78))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),78,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 78))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack416 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(24, 99),269,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack416 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(24, 99), 269))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack416 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(24, 99),269,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack416 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(24, 99), 269))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),73,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 73))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),73,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 73))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),300,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 300))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),300,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 300))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),191,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 191))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),191,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 191))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),114,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 114))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),114,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 114))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack692 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),419,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack692 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 419))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack692 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),419,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack692 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 419))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),240,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 240))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),240,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 240))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack870 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),516,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack870 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 516))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack870 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),516,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack870 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 516))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack487 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),308,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack487 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 308))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack487 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),308,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack487 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 308))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),288,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 288))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),288,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 288))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack387 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),253,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack387 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 253))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack387 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),253,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack387 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 253))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),401,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 401))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),401,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 401))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack690 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),418,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack690 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 418))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack690 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),418,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack690 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 418))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),429,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 429))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),429,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 429))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack644 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),393,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack644 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 393))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack644 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),393,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack644 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 393))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack670 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),407,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack670 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 407))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack670 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),407,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack670 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 407))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack507 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99),319,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack507 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99), 319))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack507 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99),319,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack507 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99), 319))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),448,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 448))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),448,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 448))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack365 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110),241,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack365 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110), 241))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack365 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110),241,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack365 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110), 241))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),494,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 494))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),494,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 494))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),56,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 56))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),56,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 56))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),119,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 119))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),119,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 119))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),234,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 234))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),234,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 234))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack236 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110),171,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack236 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110), 171))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack236 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110),171,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack236 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110), 171))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 81))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack725 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110),437,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack725 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110), 437))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack725 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110),437,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack725 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110), 437))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack771 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99),462,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack771 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99), 462))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack771 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99),462,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack771 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99), 462))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack80 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),85,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack80 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 85))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack80 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),85,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack80 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 85))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack262 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),185,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack262 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 185))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack262 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),185,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack262 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 185))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),110,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 110))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),110,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 110))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),320,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 320))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110),320,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(2, 110), 320))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),62,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 62))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),62,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 62))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),135,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 135))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),135,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 135))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),436,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 436))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),436,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 436))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack343 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110),229,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack343 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110), 229))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack343 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110),229,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack343 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(6, 110), 229))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack674 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),409,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack674 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 409))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack674 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),409,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack674 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 409))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack51 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),69,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack51 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 69))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack51 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),69,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack51 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 69))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack533 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),333,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack533 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 333))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack533 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),333,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack533 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 333))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack425 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),274,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack425 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 274))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack425 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),274,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack425 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 274))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),216,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 216))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),216,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 216))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack738 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),444,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack738 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 444))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack738 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),444,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack738 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 444))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack432 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),278,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack432 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 278))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack432 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),278,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack432 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 278))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack389 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),254,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack389 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 254))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack389 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),254,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack389 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 254))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack712 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),430,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack712 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 430))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack712 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),430,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack712 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 430))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack108 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),100,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack108 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 100))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack108 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),100,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack108 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 100))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),454,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 454))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),454,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 454))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),441,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 441))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),441,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 441))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack809 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),483,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack809 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 483))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack809 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),483,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack809 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 483))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack385 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),252,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack385 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 252))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack385 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),252,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack385 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 252))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack811 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),484,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack811 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 484))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack811 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),484,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack811 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 484))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack559 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),347,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack559 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 347))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack559 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),347,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack559 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 347))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack345 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),230,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack345 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 230))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack345 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),230,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack345 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 230))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack33 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),58,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack33 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 58))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack33 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),58,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack33 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 58))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),209,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 209))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),209,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 209))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),140,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 140))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),140,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 140))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack818 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),488,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack818 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 488))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack818 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),488,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack818 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 488))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack518 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99),325,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack518 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99), 325))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack518 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99),325,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack518 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99), 325))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack459 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),293,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack459 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 293))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack459 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),293,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack459 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 293))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack95 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),93,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack95 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 93))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack95 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),93,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack95 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 93))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack414 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),268,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack414 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 268))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack414 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),268,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack414 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 268))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack747 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110),449,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack747 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110), 449))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack747 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110),449,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack747 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110), 449))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack754 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),453,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack754 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 453))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack754 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),453,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack754 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 453))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack838 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110),499,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack838 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110), 499))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack838 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110),499,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack838 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110), 499))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack683 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),414,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack683 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 414))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack683 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),414,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack683 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 414))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack356 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),236,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack356 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 236))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack356 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110),236,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack356 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 110), 236))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),40,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),40,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack703 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),425,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack703 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 425))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack703 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),425,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack703 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 425))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 76))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack646 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),394,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack646 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 394))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack646 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),394,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack646 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 394))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack376 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),247,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack376 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 247))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack376 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),247,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack376 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 247))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack354 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),235,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack354 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 235))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack354 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),235,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack354 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 235))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),313,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 313))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),313,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 313))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack714 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),431,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack714 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 431))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack714 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),431,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack714 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 431))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack820 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 110),489,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack820 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 110), 489))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack820 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 110),489,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack820 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 110), 489))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),294,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 294))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),294,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 294))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack635 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),388,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack635 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 388))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack635 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),388,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack635 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 388))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack99 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 95) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack99 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 95) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),197,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 197))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),197,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 197))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack275 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99),192,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack275 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99), 192))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack275 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99),192,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack275 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(15, 99), 192))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97),184,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97), 184))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97),184,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97), 184))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),164,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 164))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),164,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 164))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack520 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),326,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack520 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 326))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack520 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99),326,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack520 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(18, 99), 326))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack165 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),131,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack165 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 131))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack165 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),131,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack165 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 131))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack576 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),356,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack576 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 356))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack576 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),356,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack576 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 356))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack851 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),506,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack851 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 506))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack851 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),506,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack851 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 506))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),376,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 376))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),376,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 376))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),355,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 355))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),355,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 355))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack60 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 99),74,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack60 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 99), 74))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack60 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 99),74,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack60 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 99), 74))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack836 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),498,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack836 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 498))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack836 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),498,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack836 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 498))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack672 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),408,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack672 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 408))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack672 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),408,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack672 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 408))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack827 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),493,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack827 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 493))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack827 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),493,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack827 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 493))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack498 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),314,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack498 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 314))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack498 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),314,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack498 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 314))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack225 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(9, 110),165,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack225 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(9, 110), 165))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack225 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(9, 110),165,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack225 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(9, 110), 165))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack328 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),221,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack328 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 221))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack328 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),221,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack328 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 221))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack112 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 99),102,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack112 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 99), 102))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack112 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 99),102,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack112 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 99), 102))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack282 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),196,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack282 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 196))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack282 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),196,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack282 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 196))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack203 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),152,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack203 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 152))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack203 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110),152,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack203 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 110), 152))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack334 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 224) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack334 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 224) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack334 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 224) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack163 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),130,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack163 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 130))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack163 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),130,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack163 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 130))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99),389,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99), 389))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99),389,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99), 389))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack791 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110),473,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack791 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110), 473))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack791 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110),473,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack791 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(19, 110), 473))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack82 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack82 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 86))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack82 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack82 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(8, 110), 86))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),150,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 150))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),150,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 150))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),49,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 49))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),49,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 49))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack136 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110),115,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack136 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110), 115))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack136 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110),115,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack136 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(14, 110), 115))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack18 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),50,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack18 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 50))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack18 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),50,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack18 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 50))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack589 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99),363,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack589 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99), 363))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack589 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99),363,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack589 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(21, 99), 363))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),68,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 68))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),68,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 68))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack192 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110),146,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack192 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110), 146))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack192 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110),146,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack192 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 110), 146))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack769 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),461,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack769 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 461))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack769 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110),461,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack769 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(3, 110), 461))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),205,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 205))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),205,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 205))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack69 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110),79,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack69 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110), 79))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack69 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110),79,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack69 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(7, 110), 79))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack423 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),273,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack423 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 273))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack423 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),273,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack423 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 273))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack317 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),215,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack317 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 215))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack317 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),215,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack317 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 215))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack441 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),283,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack441 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 283))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack441 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),283,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack441 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 283))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack782 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),468,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack782 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 468))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack782 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),468,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack782 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 468))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack308 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),210,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack308 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 210))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack308 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),210,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack308 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 210))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack378 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),248,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack378 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 248))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack378 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),248,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack378 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 248))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack872 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 110),517,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack872 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 110), 517))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack872 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 110),517,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack872 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 110), 517))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),129,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 129))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),129,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 129))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack125 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),109,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack125 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 109))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack125 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),109,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack125 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 109))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),228,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 228))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),228,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 228))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),424,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 424))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),424,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 424))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack611 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),375,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack611 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 375))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack611 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),375,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack611 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 375))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack663 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),403,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack663 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 403))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack663 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99),403,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack663 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(12, 99), 403))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack407 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(22, 99),264,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack407 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(22, 99), 264))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack407 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(22, 99),264,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack407 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(22, 99), 264))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),145,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 145))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),145,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 145))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),362,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 362))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),362,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 362))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack145 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),120,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack145 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 120))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack145 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110),120,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack145 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(10, 110), 120))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack483 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),306,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack483 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 306))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack483 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),306,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack483 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 306))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),99,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 99))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),99,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 99))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack734 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),442,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack734 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 442))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack734 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),442,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack734 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 442))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack434 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),279,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack434 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 279))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack434 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99),279,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack434 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(20, 99), 279))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 91))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack561 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110),348,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack561 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110), 348))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack561 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110),348,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack561 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(6, 110), 348))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),39,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),39,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack22 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),52,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack22 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 52))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack22 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),52,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack22 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 52))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack628 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),384,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack628 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 384))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack628 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),384,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack628 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 384))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99),41,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99),41,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41))

source(org.iban4j.bban.BbanStructureEntry, branchCode, 65, $stack2 = new org.iban4j.bban.BbanStructureEntry, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:158), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:65)]) => sink(org.iban4j.bban.BbanStructureEntry, branchCode, 65, $stack2 = new org.iban4j.bban.BbanStructureEntry, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:179), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:65)])

source(org.iban4j.bban.BbanStructureEntry, branchCode, 66, $stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType branch_code>, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:158), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66)]) => sink(org.iban4j.bban.BbanStructureEntry, branchCode, 66, $stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType branch_code>, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:179), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66)])

source(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:157), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)]) => sink(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:178), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)])

source(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:157), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)]) => sink(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:178), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)])

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,return $stack2,70,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),157,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 157)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,return $stack2,65,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 71)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType account_number>,71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack244 = new org.iban4j.bban.BbanStructure,176,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack244.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack245), 180)) => Node(<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>,this := @this: org.iban4j.bban.BbanStructure,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack0.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack1), 42)) => Node(<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>,specialinvoke this.<java.lang.Object: void <init>()>(),30,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack0.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack1), 42) => (<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>, specialinvoke this.<java.lang.Object: void <init>()>(), 30)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack214 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110),158,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack214 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 158)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,return $stack2,60,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack216 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110),159,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack216 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(17, 110), 159)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,return $stack2,70,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack253 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99),180,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack253 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(13, 99), 180)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110),179,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 179)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,return $stack2,65,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 71)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType account_number>,71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,return $stack2,60,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack249 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),178,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack249 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 178)))

List(Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack207 = new org.iban4j.bban.BbanStructure,155,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack207.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack208), 159)) => Node(<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>,this := @this: org.iban4j.bban.BbanStructure,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack0.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack1), 42)) => Node(<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>,specialinvoke this.<java.lang.Object: void <init>()>(),30,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack0.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack1), 42) => (<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>, specialinvoke this.<java.lang.Object: void <init>()>(), 30)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

