SOURCE=>BASE: Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack9 = new java.lang.String,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack9.<java.lang.String: void <init>(byte[],java.lang.String)>(payload, 'UTF-8'), 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack31 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack30),88,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack31 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack30), 88)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = virtualinvoke $stack31.<com.google.gson.JsonElement: long getAsLong()>(),88,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = virtualinvoke $stack31.<com.google.gson.JsonElement: long getAsLong()>(), 88)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = timestamp * 1000L,90,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = timestamp * 1000L, 90)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,specialinvoke $stack17.<com.linkedin.camus.coders.CamusWrapper: void <init>(java.lang.Object,long)>(payloadString, timestamp),131,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack17.<com.linkedin.camus.coders.CamusWrapper: void <init>(java.lang.Object,long)>(payloadString, timestamp), 131))
SINK=>BASE: Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = virtualinvoke $stack50.<org.joda.time.DateTime: long getMillis()>(),101,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = virtualinvoke $stack50.<org.joda.time.DateTime: long getMillis()>(), 101)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,specialinvoke $stack17.<com.linkedin.camus.coders.CamusWrapper: void <init>(java.lang.Object,long)>(payloadString, timestamp),131,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack17.<com.linkedin.camus.coders.CamusWrapper: void <init>(java.lang.Object,long)>(payloadString, timestamp), 131))

SOURCE=>BASE: Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack96,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack96, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack31 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack30),88,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack31 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack30), 88)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = virtualinvoke $stack31.<com.google.gson.JsonElement: long getAsLong()>(),88,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = virtualinvoke $stack31.<com.google.gson.JsonElement: long getAsLong()>(), 88)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = timestamp * 1000L,90,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = timestamp * 1000L, 90)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack16 = timestamp cmp 0L,125,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack16 = timestamp cmp 0L, 125))
SINK=>BASE: Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,timestamp = virtualinvoke $stack50.<org.joda.time.DateTime: long getMillis()>(),101,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, timestamp = virtualinvoke $stack50.<org.joda.time.DateTime: long getMillis()>(), 101)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack16 = timestamp cmp 0L,125,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack16 = timestamp cmp 0L, 125))

source(com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder, decode, 69, e = $stack94, [at com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder.decode(JsonStringMessageDecoder.java:69)]) => sink(com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder, decode, 102, e = $stack72, [at com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder.decode(JsonStringMessageDecoder.java:102)])

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6),101,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6), 101)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse timestamp \'"),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Could not parse timestamp \''), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' as ISO-8601 while decoding JSON message."),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' as ISO-8601 while decoding JSON message.'), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>(),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>(), 103)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack74,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack74, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6),101,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6), 101)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack74,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack74, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack74,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack74, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse timestamp \'"),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Could not parse timestamp \''), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' as ISO-8601 while decoding JSON message."),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' as ISO-8601 while decoding JSON message.'), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>(),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>(), 103)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack96,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack96, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14),83,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14), 83)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack15 == 0 goto $stack16 = timestamp cmp 0L,83,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack29 != 0 goto $stack30 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,87,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>, 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>("unix"),125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>('unix'), 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack36 == 0 goto $stack37 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("unix_milliseconds"),94,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>('unix_milliseconds'), 94)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack38 == 0 goto $stack39 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,94,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8601"),98,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>('ISO-8601'), 98)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack40 == 0 goto $stack41 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,98,SinkNode, path: ))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack96,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack96, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse timestamp \'"),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Could not parse timestamp \''), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' as ISO-8601 while decoding JSON message."),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' as ISO-8601 while decoding JSON message.'), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>(),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>(), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,virtualinvoke $stack69.<org.apache.log4j.Logger: void error(java.lang.Object)>($stack73),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, virtualinvoke $stack69.<org.apache.log4j.Logger: void error(java.lang.Object)>($stack73), 103)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack9 = new java.lang.String,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack9.<java.lang.String: void <init>(byte[],java.lang.String)>(payload, 'UTF-8'), 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14),83,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14), 83)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack15 == 0 goto $stack16 = timestamp cmp 0L,83,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack29 != 0 goto $stack30 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,87,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>, 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>("unix"),125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>('unix'), 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack36 == 0 goto $stack37 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("unix_milliseconds"),94,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>('unix_milliseconds'), 94)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack38 == 0 goto $stack39 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,94,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8601"),98,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>('ISO-8601'), 98)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack40 == 0 goto $stack41 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,98,SinkNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack50 = new org.joda.time.DateTime,101,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6), 101)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack9 = new java.lang.String,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack9.<java.lang.String: void <init>(byte[],java.lang.String)>(payload, 'UTF-8'), 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, e#6 = virtualinvoke $stack48.<com.google.gson.JsonElement: java.lang.String getAsString()>(), 99)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse timestamp \'"),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Could not parse timestamp \''), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#6), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' as ISO-8601 while decoding JSON message."),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' as ISO-8601 while decoding JSON message.'), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>(),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>(), 103)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,virtualinvoke $stack69.<org.apache.log4j.Logger: void error(java.lang.Object)>($stack73),103,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, virtualinvoke $stack69.<org.apache.log4j.Logger: void error(java.lang.Object)>($stack73), 103)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack96,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack96, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14),83,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14), 83)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack15 == 0 goto $stack16 = timestamp cmp 0L,83,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack29 != 0 goto $stack30 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,87,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>, 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>("unix"),125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>('unix'), 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack36 == 0 goto $stack37 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("unix_milliseconds"),94,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>('unix_milliseconds'), 94)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack38 == 0 goto $stack39 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,94,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8601"),98,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>('ISO-8601'), 98)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack40 == 0 goto $stack41 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,98,SinkNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack50 = new org.joda.time.DateTime,101,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack50.<org.joda.time.DateTime: void <init>(java.lang.Object)>(e#6), 101)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack9 = new java.lang.String,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack9.<java.lang.String: void <init>(byte[],java.lang.String)>(payload, 'UTF-8'), 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack9 = new java.lang.String,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, specialinvoke $stack9.<java.lang.String: void <init>(byte[],java.lang.String)>(payload, 'UTF-8'), 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack9,68,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack9, 68)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14),83,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack15 = virtualinvoke jsonObject.<com.google.gson.JsonObject: boolean has(java.lang.String)>($stack14), 83)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack15 == 0 goto $stack16 = timestamp cmp 0L,83,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack29 != 0 goto $stack30 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,87,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack35 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>, 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>("unix"),125,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>('unix'), 125)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack36 == 0 goto $stack37 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,125,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("unix_milliseconds"),94,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>('unix_milliseconds'), 94)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack38 == 0 goto $stack39 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampFormat>,94,SimpleNode, path: ) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8601"),98,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>('ISO-8601'), 98)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,if $stack40 == 0 goto $stack41 = this.<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: java.lang.String timestampField>,98,SinkNode, path: ))

List(Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,payloadString = $stack96,71,SourceNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, payloadString = $stack96, 71)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack11 = virtualinvoke payloadString.<java.lang.String: java.lang.String trim()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack12 = virtualinvoke $stack10.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>($stack11), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(),76,SimpleNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, jsonObject = virtualinvoke $stack12.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>(), 76)) => Node(<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>,$stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47),99,SinkNode, path: (<com.linkedin.camus.etl.kafka.coders.JsonStringMessageDecoder: com.linkedin.camus.coders.CamusWrapper decode(byte[])>, $stack48 = virtualinvoke jsonObject.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>($stack47), 99)))

