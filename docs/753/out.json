[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),601,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 601)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),601,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 601))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 601
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 601
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 601
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack99 = virtualinvoke e.<java.lang.Class: java.lang.String getName()>(), 212) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack99 = virtualinvoke e.<java.lang.Class: java.lang.String getName()>(), 212) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0.<java.lang.String: int hash> = l1,1473,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, l0.<java.lang.String: int hash> = l1, 1473)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l1 = l0.<java.lang.String: int hash>,1466,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack10 = 31 * l1,1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack10 = 31 * l1, 1471)) => Node(<java.lang.String: int hashCode()>,l1 = $stack10 + $stack9,1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0.<java.lang.String: int hash> = l1,1473,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, l0.<java.lang.String: int hash> = l1, 1473))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 267
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1466
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1473
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1473
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.String: int hash> = l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1473
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack35 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),581,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack35 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 581)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack35 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),581,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack35 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 581))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 581
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 581
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack35 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 581
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,$stack1 = staticinvoke <sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>(l0),538,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: void <init>(double)>,l1 := @parameter0: double,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502)) => Node(<java.lang.Double: void <init>(double)>,l0.<java.lang.Double: double value> = l1,593,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502) => (<java.lang.Double: void <init>(double)>, l0.<java.lang.Double: double value> = l1, 593)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: void <init>(double)>,l1 := @parameter0: double,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502)) => Node(<java.lang.Double: void <init>(double)>,l0.<java.lang.Double: double value> = l1,593,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502) => (<java.lang.Double: void <init>(double)>, l0.<java.lang.Double: double value> = l1, 593))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: void <init>(double)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: void <init>(double)>",
	"line": 593
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": 538
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: void <init>(double)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: void <init>(double)>",
	"line": 593
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Double: double value> = l1",
				"location": {
					"file": "",
					"class": "java.lang.Double",
					"method": "<java.lang.Double: void <init>(double)>",
					"line": 593
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l2 = l0.<java.lang.String: char[] value>,1468,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, l2 = l0.<java.lang.String: char[] value>, 1468)) => Node(<java.lang.String: int hashCode()>,$stack9 = l2[l3],1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack9 = l2[l3], 1471)) => Node(<java.lang.String: int hashCode()>,l1 = $stack10 + $stack9,1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l1 = l0.<java.lang.String: int hash>,1466,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack10 = 31 * l1,1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack10 = 31 * l1, 1471)) => Node(<java.lang.String: int hashCode()>,l1 = $stack10 + $stack9,1471,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 267
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1466
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1468
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1471
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = $stack10 + $stack9",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1471
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack26 = (long) l11",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 598
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1771
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1771
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = l0[l9]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
					"line": 1771
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 988
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 988
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = l4[l6]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 988
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack5 = l0 cmp 127L,840,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack5 = l0 cmp 127L, 840)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0),840,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0), 840))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 840
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 840
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0 cmp 127L",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
					"line": 840
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 572
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 572
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 572
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 267
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 984
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Character",
					"method": "<java.lang.Character: int digit(int,int)>",
					"line": 6563
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 117
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 430
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 267
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = lengthof $stack8",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 982
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1),412,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor> = l2,424,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor> = l2, 424)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>,109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1),412,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor> = l2,424,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor> = l2, 424))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 109
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 412
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 424
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 412
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 424
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor> = l2",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 424
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack4 = l0.<java.lang.String: char[] value>,1475,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack4 = l0.<java.lang.String: char[] value>, 1475)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),261,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack4 = l0.<java.lang.String: char[] value>,1475,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack4 = l0.<java.lang.String: char[] value>, 1475)) => Node(<java.lang.String: int hashCode()>,$stack5 = lengthof $stack4,1475,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack5 = lengthof $stack4, 1475))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 261
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 261
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1475
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1475
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1475
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1475
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = lengthof $stack3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: char charAt(int)>",
					"line": 658
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: char charAt(int)>",
					"line": 660
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack3 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack3 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack7 = lengthof $stack3,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack7 = lengthof $stack3, 1718))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack8 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
					"line": 1718
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0.<java.lang.Class: java.lang.Class newInstanceCallerCache> = l3,437,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l0.<java.lang.Class: java.lang.Class newInstanceCallerCache> = l3, 437)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0.<java.lang.Class: java.lang.Class newInstanceCallerCache> = l3,437,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l0.<java.lang.Class: java.lang.Class newInstanceCallerCache> = l3, 437))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack83 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: java.util.Map unaryOperators>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 117
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 437
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 437
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Class: java.lang.Class newInstanceCallerCache> = l3",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 437
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 569
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 569
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 569
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,$stack1 = staticinvoke <sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>(l0),538,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2),502,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2), 502))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": 538
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": 502
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack1.<java.lang.Double: void <init>(double)>($stack2)",
				"location": {
					"file": "",
					"class": "java.lang.Double",
					"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
					"line": 502
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>,60,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>,60,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
					"line": 60
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
	"line": 60
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: void <init>(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: void <init>(int)>",
	"line": 850
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
					"line": 60
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
	"line": 60
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: void <init>(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: void <init>(int)>",
	"line": 850
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Integer: int value> = l1",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: void <init>(int)>",
					"line": 850
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l6 = virtualinvoke l0.<java.lang.String: int length()>(),566,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l6 = virtualinvoke l0.<java.lang.String: int length()>(),566,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 566
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 566
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l6 = virtualinvoke l0.<java.lang.String: int length()>()",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 566
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 580
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 580
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 580
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,$stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2),2133,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,$stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2),2133,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": 1698
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": 2133
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": 1698
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": 2133
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
					"line": 2133
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack36 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),578,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack36 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 578)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack36 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),578,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack36 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 578))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 578
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 578
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack36 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 578
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack29 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),596,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack29 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 596)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack29 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),596,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack29 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 596))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 596
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 596
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack29 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 596
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),261,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack72 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('true'), 302) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 261
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 261
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 987
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 987
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l3 + -1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 987
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack11 = l0.<java.lang.Class: java.lang.Class newInstanceCallerCache>,435,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack11 = l0.<java.lang.Class: java.lang.Class newInstanceCallerCache>, 435)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>,109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack11 = l0.<java.lang.Class: java.lang.Class newInstanceCallerCache>,435,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack11 = l0.<java.lang.Class: java.lang.Class newInstanceCallerCache>, 435))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 109
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 435
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 435
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack11 = l0.<java.lang.Class: java.lang.Class newInstanceCallerCache>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 435
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack7 = (int) l0,838,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack7 = (int) l0, 838)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack8 = $stack7 + 128,838,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack8 = $stack7 + 128, 838)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack7 = (int) l0,838,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack7 = (int) l0, 838)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack8 = $stack7 + 128,838,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack8 = $stack7 + 128, 838))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 838
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 838
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 838
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 838
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack8 = $stack7 + 128",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
					"line": 838
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1776
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1776
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack27 = l0[l9]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
					"line": 1776
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 * $stack22,594,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l2 = l2 * $stack22, 594)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack25 = l2 cmp $stack24,595,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack25 = l2 cmp $stack24, 595)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack23 = (long) l11,595,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack23 = (long) l11, 595)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack24 = l7 + $stack23,595,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack24 = l7 + $stack23, 595))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 595
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 595
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 594
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 595
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack25 = l2 cmp $stack24",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 595
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>,60,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>,60,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
					"line": 60
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
	"line": 60
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": 831
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
					"line": 60
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
	"line": 60
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": 831
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0 + 128",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
					"line": 831
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack31 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 427))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 122
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1784
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String,int)>",
	"line": 1718
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
	"line": 1784
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack20 = l0[l10]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>",
					"line": 1784
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(),432,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(), 432)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(),432,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(), 432))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 177
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 432
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 432
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 432
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,$stack1 = staticinvoke <sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>(l0),538,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Double: java.lang.Double valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502)) => Node(<java.lang.Double: double parseDouble(java.lang.String)>,$stack1 = staticinvoke <sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>(l0),538,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313) => (<java.lang.Double: java.lang.Double valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(l0), 502))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": 538
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: java.lang.Double valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Double",
	"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
	"line": 538
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = staticinvoke <sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Double",
					"method": "<java.lang.Double: double parseDouble(java.lang.String)>",
					"line": 538
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l2 = l0.<java.lang.String: char[] value>,1468,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, l2 = l0.<java.lang.String: char[] value>, 1468)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l2 = l0.<java.lang.String: char[] value>,1468,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, l2 = l0.<java.lang.String: char[] value>, 1468))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1468
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1468
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1468
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack7 = staticinvoke <sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>(l0, l2#5),433,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack7 = staticinvoke <sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>(l0, l2#5), 433)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(),432,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2#5 = virtualinvoke l1#4.<java.lang.reflect.Constructor: int getModifiers()>(), 432)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack7 = staticinvoke <sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>(l0, l2#5),433,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack7 = staticinvoke <sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>(l0, l2#5), 433))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 177
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 432
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 433
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 433
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = staticinvoke <sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>(l0, l2#5)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 433
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack30 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack30 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack30 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack30 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 592
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 592
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack30 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 592
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack7 = l0.<java.lang.String: char[] value>,1470,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack7 = l0.<java.lang.String: char[] value>, 1470)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,$stack7 = l0.<java.lang.String: char[] value>,1470,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267) => (<java.lang.String: int hashCode()>, $stack7 = l0.<java.lang.String: char[] value>, 1470))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 267
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1470
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1470
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1470
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 * $stack22,594,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l2 = l2 * $stack22, 594)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 * $stack22,594,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l2 = l2 * $stack22, 594))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 594
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 594
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = l2 * $stack22",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 594
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack17 = l2,603,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack17 = l2,603,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 603
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 603
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack17 = l2",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 603
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,specialinvoke tmp$1479450980.<java.lang.Class$1: void <init>(java.lang.Class,java.lang.reflect.Constructor)>(l0, l2),417,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke tmp$1479450980.<java.lang.Class$1: void <init>(java.lang.Class,java.lang.reflect.Constructor)>(l0, l2), 417)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>,$stack4 = (com.mitchellbosecke.pebble.lexer.Token) $stack3,129,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1),412,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.Object newInstance()>,specialinvoke tmp$1767806001.<java.lang.Class$1: void <init>(java.lang.Class,java.lang.reflect.Constructor)>(l0, l2),417,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke tmp$1767806001.<java.lang.Class$1: void <init>(java.lang.Class,java.lang.reflect.Constructor)>(l0, l2), 417))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack4 = (com.mitchellbosecke.pebble.lexer.Token) $stack3",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.TokenStream",
					"method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
					"line": 129
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.TokenStream",
	"method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
	"line": 129
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 412
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 417
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 417
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke tmp$1479450980.<java.lang.Class$1: void <init>(java.lang.Class,java.lang.reflect.Constructor)>(l0, l2)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 417
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0),397,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>,109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0),397,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 109
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 397
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 397
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 397
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 583
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 583
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 583
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l6 = virtualinvoke l0.<java.lang.String: int length()>(), 566))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int length()>",
					"line": 623
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack21 = l2 cmp l9,591,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack26 = (long) l11,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack26 = (long) l11, 598)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l2 = l2 - $stack26,598,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack21 = l2 cmp l9,591,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack21 = l2 cmp l9, 591))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 591
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 598
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 591
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack21 = l2 cmp l9",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 591
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l1 = l0.<java.lang.String: int hash>,1466,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),261,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),267,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<java.lang.String: int hashCode()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267)) => Node(<java.lang.String: int hashCode()>,l1 = l0.<java.lang.String: int hash>,1466,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack38 = virtualinvoke longValue.<java.lang.String: int hashCode()>(), 267))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 261
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 261
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1466
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 267
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int hashCode()>",
	"line": 1466
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.String: int hash>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int hashCode()>",
					"line": 1466
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,staticinvoke <sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>(l3, l0, null, l2#5),436,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, staticinvoke <sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>(l3, l0, null, l2#5), 436)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>,109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(),109,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,staticinvoke <sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>(l3, l0, null, l2#5),436,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, staticinvoke <sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>(l3, l0, null, l2#5), 436))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack11 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 109
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 109
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 436
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 436
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "staticinvoke <sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>(l3, l0, null, l2#5)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 436
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
					"line": 803
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>,60,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(),213,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)) => Node(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58) => (<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88) => (<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1), 766) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack103 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 213
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": 832
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
					"line": 60
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
	"line": 60
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 213
},{
	"class": "com.mitchellbosecke.pebble.error.ParserException",
	"method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
	"line": 832
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.Integer valueOf(int)>",
					"line": 832
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack9 = virtualinvoke l1#4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack8),442,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,430,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l1#4 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 430)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack9 = virtualinvoke l1#4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack8),442,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 122
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 442
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 430
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 442
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = virtualinvoke l1#4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack8)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 442
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack31 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),589,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack31 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 589)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack31 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),589,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack31 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 589))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 589
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 589
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack31 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 589
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l11 = staticinvoke <java.lang.Character: int digit(char,int)>($stack19, l1), 587))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1)",
				"location": {
					"file": "",
					"class": "java.lang.Character",
					"method": "<java.lang.Character: int digit(char,int)>",
					"line": 6511
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: long parseLong(java.lang.String,int)>,$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18),587,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803) => (<java.lang.Long: long parseLong(java.lang.String,int)>, $stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18), 587))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
	"line": 587
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack19 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack18)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: long parseLong(java.lang.String,int)>",
					"line": 587
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1),412,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1),412,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
					"line": 177
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 412
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 412
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1)",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 412
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35),177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36,177,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(),207,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack5 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,404,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack5 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 404)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84),117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85,117,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>,operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(),122,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)) => Node(<java.lang.Class: java.lang.Object newInstance()>,$stack5 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>,404,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94) => (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124) => (<java.lang.Class: java.lang.Object newInstance()>, $stack5 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>, 404))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 117
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 122
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 404
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 177
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
	"line": 207
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": 404
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0.<java.lang.Class: java.lang.reflect.Constructor cachedConstructor>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.Object newInstance()>",
					"line": 404
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack3 = l0 cmp -128L,837,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack3 = l0 cmp -128L, 837)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),305,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,$stack3 = l0 cmp -128L,837,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, $stack3 = l0 cmp -128L, 837))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 305
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 305
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 837
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": 837
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack3 = l0 cmp -128L",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
					"line": 837
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": 1698
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean contains(java.lang.CharSequence)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(java.lang.String)>",
	"line": 1698
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(java.lang.String)>",
					"line": 1698
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>,44,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)) => Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: void <init>(long)>,l1 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0), 840)) => Node(<java.lang.Long: void <init>(long)>,l0.<java.lang.Long: long value> = l1,948,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0), 840) => (<java.lang.Long: void <init>(long)>, l0.<java.lang.Long: long value> = l1, 948)) SINK=>BASE: Node(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>,numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(),311,SourceNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)) => Node(<java.lang.Long: java.lang.Long valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10),803,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 803)) => Node(<java.lang.Long: java.lang.Long valueOf(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803)) => Node(<java.lang.Long: void <init>(long)>,l1 := @parameter0: long,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0), 840)) => Node(<java.lang.Long: void <init>(long)>,l0.<java.lang.Long: long value> = l1,948,SinkNode, path: (<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306) => (<java.lang.Long: java.lang.Long valueOf(java.lang.String)>, $stack2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack1), 803) => (<java.lang.Long: java.lang.Long valueOf(long)>, specialinvoke $stack4.<java.lang.Long: void <init>(long)>(l0), 840) => (<java.lang.Long: void <init>(long)>, l0.<java.lang.Long: long value> = l1, 948))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
					"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
					"line": 311
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: void <init>(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: void <init>(long)>",
	"line": 948
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
				"location": {
					"file": "",
					"class": "com.mitchellbosecke.pebble.lexer.Token",
					"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "com.mitchellbosecke.pebble.lexer.Token",
	"method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
	"line": 44
},{
	"class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
	"method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
	"line": 311
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(java.lang.String)>",
	"line": 803
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.Long valueOf(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: void <init>(long)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: void <init>(long)>",
	"line": 948
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Long: long value> = l1",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: void <init>(long)>",
					"line": 948
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack24 = new com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)","(<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "267"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack71 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('FALSE')",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "302"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack71 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('FALSE'), 302)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack40 = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "671"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, $stack40 = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 671)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression3 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "391"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, expression3 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 391)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression2 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "389"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, expression2 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 389)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = virtualinvoke $stack43.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "648"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, $stack44 = virtualinvoke $stack43.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 648)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack42.<com.mitchellbosecke.pebble.node.expression.MapExpression: void <init>(int)>($stack44)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "648"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, specialinvoke $stack42.<com.mitchellbosecke.pebble.node.expression.MapExpression: void <init>(int)>($stack44), 648)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "keyExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "655"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, keyExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 655)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "119"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88), 119)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "childExpression := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.UnaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 129)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: com.mitchellbosecke.pebble.node.expression.Expression childExpression> = childExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.UnaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "29"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 129)","(<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, this.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: com.mitchellbosecke.pebble.node.expression.Expression childExpression> = childExpression, 29)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "267"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack39 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('false')",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "267"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack39 = virtualinvoke longValue.<java.lang.String: boolean equals(java.lang.Object)>('false'), 267)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "138"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "left := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 216)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: com.mitchellbosecke.pebble.node.expression.Expression leftExpression> = left",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "36"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 216)","(<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>, this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: com.mitchellbosecke.pebble.node.expression.Expression leftExpression> = left, 36)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = virtualinvoke $stack31.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "638"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, $stack32 = virtualinvoke $stack31.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 638)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack30.<com.mitchellbosecke.pebble.node.expression.ArrayExpression: void <init>(java.util.List,int)>(elements, $stack32)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "638"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, specialinvoke $stack30.<com.mitchellbosecke.pebble.node.expression.ArrayExpression: void <init>(java.util.List,int)>(elements, $stack32), 638)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack94 = virtualinvoke $stack93.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "125"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack94 = virtualinvoke $stack93.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 125)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "284"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack41 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 284)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter0: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralNullExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack40.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>($stack41), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralNullExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack40.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>($stack41), 284)","(<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>, this.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: int lineNumber> = lineNumber, 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "313"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "313"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30), 313)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack68 = virtualinvoke $stack67.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack68 = virtualinvoke $stack67.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 292)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter1: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode",
  "method": "<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode",
  "method": "<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>",
  "line": "24"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)","(<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>, this.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: int lineNumber> = lineNumber, 24)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "277"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack46 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 277)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack44.<com.mitchellbosecke.pebble.node.expression.LiteralBooleanExpression: void <init>(java.lang.Boolean,int)>($stack45, $stack46)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "277"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack44.<com.mitchellbosecke.pebble.node.expression.LiteralBooleanExpression: void <init>(java.lang.Boolean,int)>($stack45, $stack46), 277)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "207"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, e = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 207)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.')",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "312"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack14 = virtualinvoke numberValue#22.<java.lang.String: boolean contains(java.lang.CharSequence)>('.'), 312)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "284"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack41 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack40.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>($stack41)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "284"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack40.<com.mitchellbosecke.pebble.node.expression.LiteralNullExpression: void <init>(int)>($stack41), 284)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61), 197)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>, 315)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.parser.ParserOptions",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61), 197)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "right := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>(unaryExpression#41), 217)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: com.mitchellbosecke.pebble.node.expression.Expression rightExpression> = right",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "40"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>(unaryExpression#41), 217)","(<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>, this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: com.mitchellbosecke.pebble.node.expression.Expression rightExpression> = right, 40)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack60 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack60 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "name := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.ContextVariableExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: java.lang.String name> = name",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.ContextVariableExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>",
  "line": "24"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)","(<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>, this.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: java.lang.String name> = name, 24)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "318"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack19 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 318)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: com.mitchellbosecke.pebble.operator.Associativity getAssociativity()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack59 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: com.mitchellbosecke.pebble.operator.Associativity getAssociativity()>(), 197)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack60 = virtualinvoke $stack58.<com.mitchellbosecke.pebble.operator.Associativity: boolean equals(java.lang.Object)>($stack59)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack60 = virtualinvoke $stack58.<com.mitchellbosecke.pebble.operator.Associativity: boolean equals(java.lang.Object)>($stack59), 197)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack61 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack61 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 297)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "119"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88), 119)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61), 197)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack86 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "332"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack86 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 332)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "119"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88), 119)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setChildExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 129)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: int getPrecedence()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "198"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack69 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: int getPrecedence()>(), 198)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "189"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack43 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 189)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack30 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "313"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack30 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 313)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "313"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30), 313)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack68 = virtualinvoke $stack67.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack68 = virtualinvoke $stack67.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "valueExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "657"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, valueExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 657)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack32 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)","(<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "197"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack61), 197)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>(unaryExpression#41)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "217"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setRight(com.mitchellbosecke.pebble.node.expression.Expression)>(unaryExpression#41), 217)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>($stack94)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "125"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>($stack94), 125)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = virtualinvoke testToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "474"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, $stack18 = virtualinvoke testToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 474)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "216"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 216)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "119"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88), 119)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "348"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack43 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "348"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = virtualinvoke $stack35.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "618"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, $stack36 = virtualinvoke $stack35.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 618)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack34.<com.mitchellbosecke.pebble.node.expression.ArrayExpression: void <init>(int)>($stack36)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "618"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, specialinvoke $stack34.<com.mitchellbosecke.pebble.node.expression.ArrayExpression: void <init>(int)>($stack36), 618)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "216"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 216)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "348"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack42 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "348"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack50 = virtualinvoke $stack49.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "210"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack50 = virtualinvoke $stack49.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 210)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter0: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>($stack50), 210)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.BinaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>",
  "line": "63"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>($stack50), 210)","(<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>, this.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: int lineNumber> = lineNumber, 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "461"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, $stack18 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 461)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression: void <init>(java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode,int)>($stack17, args, $stack18)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "461"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression: void <init>(java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode,int)>($stack17, args, $stack18), 461)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "keyExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "655"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, keyExpr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 655)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke elements.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(keyExpr, valueExpr)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "658"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, interfaceinvoke elements.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(keyExpr, valueExpr), 658)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "138"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "216"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLeft(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 216)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>",
  "line": "86"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack19 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 86)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "461"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, $stack17 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 461)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression: void <init>(java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode,int)>($stack17, args, $stack18)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "461"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression: void <init>(java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode,int)>($stack17, args, $stack18), 461)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "213"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack105 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "313"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(numberValue#22), 313)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: java.lang.Double",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30), 313)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: java.lang.Double value> = value",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>",
  "line": "22"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack28.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>($stack29, $stack30), 313)","(<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: void <init>(java.lang.Double,int)>, this.<com.mitchellbosecke.pebble.node.expression.LiteralDoubleExpression: java.lang.Double value> = value, 22)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack56 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "190"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack56 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 190)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "394"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack19 = virtualinvoke $stack18.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 394)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "213"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack105 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 213)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter2: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.error.ParserException",
  "method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88)","(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.error.ParserException",
  "method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
  "line": "16"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88)","(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(lineNumber), 16)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<com.mitchellbosecke.pebble.error.PebbleException: void <init>(java.lang.Throwable,java.lang.String,java.lang.Integer,java.lang.String)>(cause, message, $stack5, filename)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.error.ParserException",
  "method": "<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>",
  "line": "16"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack12.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, message, $stack14, $stack15), 88)","(<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>, specialinvoke this.<com.mitchellbosecke.pebble.error.PebbleException: void <init>(java.lang.Throwable,java.lang.String,java.lang.Integer,java.lang.String)>(cause, message, $stack5, filename), 16)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = virtualinvoke testToken.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "477"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, $stack20 = virtualinvoke testToken.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 477)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack19.<com.mitchellbosecke.pebble.node.TestInvocationExpression: void <init>(int,java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode)>(lineNumber, $stack20, args)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "477"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, specialinvoke $stack19.<com.mitchellbosecke.pebble.node.TestInvocationExpression: void <init>(int,java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode)>(lineNumber, $stack20, args), 477)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>",
  "line": "88"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack14 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack65 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack65 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 292)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "name := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode",
  "method": "<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: java.lang.String name> = name",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode",
  "method": "<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>",
  "line": "23"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)","(<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>, this.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: java.lang.String name> = name, 23)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack65 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack65 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack64.<com.mitchellbosecke.pebble.node.FunctionOrMacroNameNode: void <init>(java.lang.String,int)>($stack65, $stack68), 292)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "624"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, expr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 624)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack35 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack36 = interfaceinvoke $stack34.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack35), 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "177"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator#39 = (com.mitchellbosecke.pebble.operator.BinaryOperator) $stack36, 177)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack40 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "184"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack40 = interfaceinvoke operator#39.<com.mitchellbosecke.pebble.operator.BinaryOperator: java.lang.Class getNodeClass()>(), 184)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = virtualinvoke $stack39.<java.lang.Object: boolean equals(java.lang.Object)>($stack40)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "184"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack41 = virtualinvoke $stack39.<java.lang.Object: boolean equals(java.lang.Object)>($stack40), 184)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "348"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack43 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 348)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter1: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralStringExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralStringExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>",
  "line": "23"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, specialinvoke $stack41.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>($stack42, $stack43), 348)","(<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: void <init>(java.lang.String,int)>, this.<com.mitchellbosecke.pebble.node.expression.LiteralStringExpression: int lineNumber> = lineNumber, 23)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "624"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, expr = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 624)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke elements.<java.util.List: boolean add(java.lang.Object)>(expr)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "625"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, interfaceinvoke elements.<java.util.List: boolean add(java.lang.Object)>(expr), 625)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "119"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>($stack88), 119)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "138"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "expression := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.TernaryExpression: void <init>(com.mitchellbosecke.pebble.node.expression.Expression,com.mitchellbosecke.pebble.node.expression.Expression,com.mitchellbosecke.pebble.node.expression.Expression,int,java.lang.String)>(expression, expression2, expression3, $stack19, $stack21)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "394"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, specialinvoke $stack16.<com.mitchellbosecke.pebble.node.expression.TernaryExpression: void <init>(com.mitchellbosecke.pebble.node.expression.Expression,com.mitchellbosecke.pebble.node.expression.Expression,com.mitchellbosecke.pebble.node.expression.Expression,int,java.lang.String)>(expression, expression2, expression3, $stack19, $stack21), 394)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack60 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack60 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 297)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "lineNumber = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "466"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, lineNumber = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 466)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "351"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>",
  "line": "250"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack26 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>(token), 174)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>, $stack5 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 250)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "lineNumber = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "466"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, lineNumber = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 466)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack19.<com.mitchellbosecke.pebble.node.TestInvocationExpression: void <init>(int,java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode)>(lineNumber, $stack20, args)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "477"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, specialinvoke $stack19.<com.mitchellbosecke.pebble.node.TestInvocationExpression: void <init>(int,java.lang.String,com.mitchellbosecke.pebble.node.ArgumentsNode)>(lineNumber, $stack20, args), 477)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack50 = virtualinvoke $stack49.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "210"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack50 = virtualinvoke $stack49.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 210)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>($stack50)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "210"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke operatorNodeClass#63.<com.mitchellbosecke.pebble.node.expression.BinaryExpression: void setLineNumber(int)>($stack50), 210)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack32",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack32, 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "336"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>(), 165)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "165"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "272"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack49.<com.mitchellbosecke.pebble.node.expression.LiteralBooleanExpression: void <init>(java.lang.Boolean,int)>($stack50, $stack51)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "272"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack49.<com.mitchellbosecke.pebble.node.expression.LiteralBooleanExpression: void <init>(java.lang.Boolean,int)>($stack50, $stack51), 272)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>",
  "line": "94"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "136"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 136)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node), 418)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "418"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "138"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack94 = virtualinvoke $stack93.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "125"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack94 = virtualinvoke $stack93.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter0: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.UnaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>($stack94), 125)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.UnaryExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>",
  "line": "40"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, virtualinvoke unaryExpression.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>($stack94), 125)","(<com.mitchellbosecke.pebble.node.expression.UnaryExpression: void setLineNumber(int)>, this.<com.mitchellbosecke.pebble.node.expression.UnaryExpression: int lineNumber> = lineNumber, 40)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack88 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "332"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack88 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 332)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack78.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack87, $stack88, $stack90)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "332"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack78.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack87, $stack88, $stack90), 332)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isUnary(com.mitchellbosecke.pebble.lexer.Token)>",
  "line": "239"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack13 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isUnary(com.mitchellbosecke.pebble.lexer.Token)>(token), 116)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isUnary(com.mitchellbosecke.pebble.lexer.Token)>, $stack5 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 239)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "node = $stack24",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = $stack24, 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "node := @parameter0: com.mitchellbosecke.pebble.node.expression.Expression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>(node)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "423"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parsePostfixExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 138)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "458"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, $stack15 = virtualinvoke filterToken.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 458)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack61 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "297"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack61 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 297)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "lineNumber := @parameter1: int",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.ContextVariableExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: int lineNumber> = lineNumber",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.ContextVariableExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>",
  "line": "25"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack59.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>($stack60, $stack61), 297)","(<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: void <init>(java.lang.String,int)>, this.<com.mitchellbosecke.pebble.node.expression.ContextVariableExpression: int lineNumber> = lineNumber, 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack84 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack85 = interfaceinvoke $stack83.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack84), 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "117"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operator = (com.mitchellbosecke.pebble.operator.UnaryOperator) $stack85, 117)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "122"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, operatorNodeClass = interfaceinvoke operator.<com.mitchellbosecke.pebble.operator.UnaryOperator: java.lang.Class getNodeClass()>(), 122)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack91 = virtualinvoke operatorNodeClass.<java.lang.Class: java.lang.Object newInstance()>(), 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "124"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression = (com.mitchellbosecke.pebble.node.expression.UnaryExpression) $stack91, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "expression = unaryExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "131"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "225"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>(), 292)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack24 = new com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)","(<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack19 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "518"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack19 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 518)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "filterToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack6)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "452"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, filterToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack6), 452)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>",
  "line": "58"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "305"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 305)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(longValue), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack51.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "221"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack26 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>(token), 174)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack26 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack26 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "testToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack9)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "468"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, testToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack9), 468)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack51.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "221"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack26 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>(token), 174)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "token := @parameter0: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack26 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>(token), 174)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "testToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack9)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "468"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, testToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack9), 468)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack92 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "125"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack92 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 125)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack93 = virtualinvoke $stack92.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "125"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack93 = virtualinvoke $stack92.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 125)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>",
  "line": "466"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>(), 191)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTestInvocationExpression()>, $stack7 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 466)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack34 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack34 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>, 315)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.parser.ParserOptions",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "347"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack48 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "210"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack48 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 210)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack49 = virtualinvoke $stack48.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "210"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack49 = virtualinvoke $stack48.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 210)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack31 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "638"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, $stack31 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 638)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack17 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "318"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack17.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack18, $stack19), 318)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)","(<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "filterToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack6)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>",
  "line": "452"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, unaryExpression#41 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>(), 185)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.FilterInvocationExpression parseFilterInvocationExpression()>, filterToken = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack6), 452)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "stream = interfaceinvoke $stack4.<com.mitchellbosecke.pebble.parser.Parser: com.mitchellbosecke.pebble.lexer.TokenStream getStream()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "612"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, stream = interfaceinvoke $stack4.<com.mitchellbosecke.pebble.parser.Parser: com.mitchellbosecke.pebble.lexer.TokenStream getStream()>(), 612)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack35 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "618"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, $stack35 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 618)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>",
  "line": "347"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack17 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "394"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack17 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.lexer.TokenStream stream>, 394)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "394"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack27 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>(expression), 225)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseTernaryExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack18 = virtualinvoke $stack17.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 394)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack32 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
  "method": "<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>",
  "line": "20"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)","(<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 20)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "109"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack11.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 109)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "token := @parameter0: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isUnary(com.mitchellbosecke.pebble.lexer.Token)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack13 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isUnary(com.mitchellbosecke.pebble.lexer.Token)>(token), 116)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack16 == 0 goto $stack17 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>, $stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1), 129)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = (com.mitchellbosecke.pebble.lexer.Token) $stack3",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>, $stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1), 129)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = (com.mitchellbosecke.pebble.lexer.Token) $stack3",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack35 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>",
  "line": "618"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>(), 145)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseArrayDefinitionExpression()>, $stack35 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 618)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack26 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack26 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "442"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseFunctionOrMacroInvocation(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack17 = virtualinvoke $stack16.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 442)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack15 = this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.parser.ParserOptions parserOptions>, 315)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.parser.ParserOptions",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean literalDecimalTreatedAsInteger>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ParserOptions",
  "method": "<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>",
  "line": "13"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack16 = virtualinvoke $stack15.<com.mitchellbosecke.pebble.parser.ParserOptions: boolean isLiteralDecimalTreatedAsInteger()>(), 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack16 == 0 goto $stack17 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "315"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack32 = new com.mitchellbosecke.pebble.node.expression.LiteralLongExpression",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "306"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack32.<com.mitchellbosecke.pebble.node.expression.LiteralLongExpression: void <init>(java.lang.Long,int)>($stack33, $stack34), 306)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack49 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "506"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, $stack49 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 506)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = (com.mitchellbosecke.pebble.lexer.Token) $stack8",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>",
  "line": "73"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>",
  "line": "58"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = (com.mitchellbosecke.pebble.lexer.Token) $stack8",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>",
  "line": "73"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>, $stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null), 58)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>",
  "line": "58"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)","(<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>, $stack3 = virtualinvoke $stack2.<java.util.ArrayList: java.lang.Object get(int)>($stack1), 129)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = (com.mitchellbosecke.pebble.lexer.Token) $stack3",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>",
  "line": "129"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "261"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, token = virtualinvoke $stack5.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 261)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack39 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "671"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, $stack39 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 671)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "173"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "token := @parameter0: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, $stack26 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: boolean isBinary(com.mitchellbosecke.pebble.lexer.Token)>(token), 174)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack43 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>",
  "line": "648"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, expression = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>(), 154)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseMapDefinitionExpression()>, $stack43 = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 648)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "311"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, numberValue#22 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 311)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(numberValue#22), 316)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "316"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, specialinvoke $stack24.<com.mitchellbosecke.pebble.node.expression.LiteralIntegerExpression: void <init>(java.lang.Integer,int)>($stack25, $stack26), 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek(int)>(1)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>",
  "line": "100"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack55 = virtualinvoke $stack54.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>(), 291)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>",
  "line": "292"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token peek()>(), 292)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, longValue = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>(), 267)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: java.lang.String getValue()>",
  "line": "44"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>()",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>",
  "line": "173"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, $stack27 = virtualinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>(), 351)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression()>, $stack1 = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>(0), 94)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseExpression(int)>, token = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token current()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>(type, null)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.TokenStream",
  "method": "<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>",
  "line": "58"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, node = specialinvoke this.<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>(), 326)","(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseStringExpression()>, token = virtualinvoke $stack39.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack38), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25)",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.parser.ExpressionParser",
  "method": "<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>",
  "line": "499"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression parseBeanAttributeExpression(com.mitchellbosecke.pebble.node.expression.Expression)>, token = virtualinvoke stream.<com.mitchellbosecke.pebble.lexer.TokenStream: com.mitchellbosecke.pebble.lexer.Token expect(com.mitchellbosecke.pebble.lexer.Token$Type)>($stack25), 499)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.mitchellbosecke.pebble.lexer.Token",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "-1"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber>",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": ["(<com.mitchellbosecke.pebble.parser.ExpressionParser: com.mitchellbosecke.pebble.node.expression.Expression subparseExpression()>, $stack51 = virtualinvoke token.<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>(), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.mitchellbosecke.pebble.lexer.Token",
  "method": "<com.mitchellbosecke.pebble.lexer.Token: int getLineNumber()>",
  "line": "60"
},
"stackTrace": [""]
}]
}
}

]
