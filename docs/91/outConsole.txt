Running soot scenario hdt-java;org.rdfhdt.hdt.triples.impl.PredicateIndexArray;generate(ProgressListener);75f3d402bc177bac168e7ea810c16f6d98776f89
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,58500
Time to perform Confluence 1 Inter 2,73000
Configure Soot Confluence 2 Inter 0,19200
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.nodeToString(ConfluenceConflict.java:126)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.lambda$pathToString$0(ConfluenceConflict.java:118)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.pathToString(ConfluenceConflict.java:120)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.toString(ConfluenceConflict.java:41)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.hashCode(ConfluenceConflict.java:135)
	at java.util.HashMap.hash(HashMap.java:339)
	at java.util.HashMap.put(HashMap.java:612)
	at java.util.HashSet.add(HashSet.java:220)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.intersectPathsByLastNode(DFPConfluenceAnalysis.java:232)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.execute(DFPConfluenceAnalysis.java:157)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:553)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,50500
Runtime: 0.095s
OA interference in class PredicateIndexArray, method void generate(org.rdfhdt.hdt.listener.ProgressListener), execution of line 72 overrides 91, assigning to variable l2, 
Caused by line 72 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:72)
at org.rdfhdt.hdt.util.BitUtil.log2(BitUtil.java:44)
at java.lang.Long.numberOfLeadingZeros(Long.java:1424)
And line 91 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:91)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.aggressiveTrimToSize(SequenceLog64.java:263)
at org.rdfhdt.hdt.util.BitUtil.log2(BitUtil.java:44)
at java.lang.Long.numberOfLeadingZeros(Long.java:1420)
 
OA interference in class PredicateIndexArray, method void generate(org.rdfhdt.hdt.listener.ProgressListener), execution of line 91 overrides 109, assigning to variable this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 
Caused by line 91 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:91)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.aggressiveTrimToSize(SequenceLog64.java:272)
And line 109 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:109)
 
OA interference in class PredicateIndexArray, method void generate(org.rdfhdt.hdt.listener.ProgressListener), execution of line 72 overrides 91, assigning to variable l3, 
Caused by line 72 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:72)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.<init>(SequenceLog64.java:67)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.<init>(SequenceLog64.java:75)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.<clinit>(SequenceLog64.java:54)
at java.lang.Class.desiredAssertionStatus(Class.java:3211)
And line 91 flow:
at org.rdfhdt.hdt.triples.impl.PredicateIndexArray.generate(PredicateIndexArray.java:91)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.aggressiveTrimToSize(SequenceLog64.java:260)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.get(SequenceLog64.java:226)
at org.rdfhdt.hdt.compact.sequence.SequenceLog64.<clinit>(SequenceLog64.java:54)
at java.lang.Class.desiredAssertionStatus(Class.java:3211)
 
Time to perform OA Inter 0,73200
OA Inter Visited methods: 255
 Analysis results
----------------------------
 Number of conflicts: 47
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48300
Time to perform DFP Inter 3,14000
Depth limit: 5
CONFLICTS: DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in result = $stack14 >>> j and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 81, defined in $stack3 = (long) bitsField and propagated in $stack4 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>($stack3, numentries)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)
Caused by line 81 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>(val), 81) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>, $stack4 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>($stack3, numentries), 287)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack2 = $stack1 ^ -1L and propagated in $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in $stack12 = bitPos % 64L and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 112, defined in $stack5 = 64 - $stack4 and propagated in $stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58), 112)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in $stack22 = 64 - j and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 81, defined in $stack5 = 64 - $stack4 and propagated in $stack3 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
Caused by line 81 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>(val), 81) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>, $stack3 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 287)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 109, defined in $stack5 = 64 - $stack4 and propagated in specialinvoke $stack44.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>($stack48, $stack51)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
Caused by line 109 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack44.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>($stack48, $stack51), 109)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack3 = (long) bitsField and propagated in size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in $stack12 = bitPos % 64L and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack22 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in bitPos = index * $stack10 and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in $stack18 = data[$stack15] and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack3 = (long) bitsField and propagated in $stack14 = size cmp 2147483647L
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack14 = size cmp 2147483647L, 79)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack32 = (int) chunkIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in blockIndex = pos / 64L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack5 = 64 - $stack4 and propagated in $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in $stack22 = 64 - j and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: ")
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in bitPos = index * $stack10 and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in $stack2 = bitIndex >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 75, defined in result = $stack14 >>> j and propagated in $stack130 = count
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 75 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in result = $stack14 >>> j and propagated in $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in result = $stack14 >>> j and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack3 = (long) bitsField and propagated in $stack11 = newarray (long)[$stack10]
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack11 = newarray (long)[$stack10], 78)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in $stack9 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack37 = (int) superBlockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 94, defined in $stack18 = data[$stack15] and propagated in $stack3 = $stack2 >>> 6
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 94 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack12 = bitPos % 64L and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack22 = 64 - j and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in chunkIndex = 63L - $stack29
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in bitPos = index * $stack10 and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack18 = (int) bitIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 72 to 72, defined in $stack5 = 64 - $stack4 and propagated in specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)
Caused by line 72 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack5 = bitIndex cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack12 = bitPos % 64L and propagated in $stack17 = pos cmp 0L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack22 = 64 - j and propagated in superBlockIndex = pos / 256L
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack18 = data[$stack15] and propagated in this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack18 = data[$stack15] and propagated in $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in bitPos = index * $stack10 and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 98, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex)
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 98 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)
DF interference in <org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>
Data flows from execution of line 85 to 112, defined in $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position) and propagated in $stack25 = (int) blockIndex
Caused by line 85 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)
Caused by line 112 flow: path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181)
[List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = 0,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack8 = (long) i, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = i + 1,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack8 = (long) i, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack34 = (long) i,260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack34 = (long) i, 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>,$stack4 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>($stack3, numentries),287,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>(val), 81) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>, $stack4 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>($stack3, numentries), 287))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack23 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,269,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack23 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 269)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack18 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack18 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,total := @parameter1: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack2 = n cmp 0L,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack2 = n cmp 0L, 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,if $stack2 == 0 goto $stack5 = 0,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack34 = (long) i,260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack34 = (long) i, 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25),72,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>,specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L),67,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity),75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = 0,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack8 = (long) i, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = i + 1,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack8 = (long) i, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack34 = (long) i,260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack34 = (long) i, 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = 0L,257,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = max,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = max, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack12 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,267,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack12 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 267)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack12 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,267,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack12 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 267)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58),112,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58), 112)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = numbits,72,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = numbits, 72)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>,$stack3 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,287,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>(val), 81) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void resize(long)>, $stack3 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 287))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = 0L,257,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = max,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = max, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,numbits := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack2 = numbits - 1L,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack2 = numbits - 1L, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>,$stack3 = $stack2 >>> 6,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack31.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>($stack34), 94) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void <init>(long)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>(nbits), 65) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void <init>(long)>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>(nbits), 69) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>, $stack3 = $stack2 >>> 6, 93))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25),72,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = 0L,257,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = max,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = max, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity),75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,$stack14 = size cmp 2147483647L,79,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack14 = size cmp 2147483647L, 79))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack34 = (long) i,260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack34 = (long) i, 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,$stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits),73,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack30 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,268,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack30 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 268)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack17 = pos cmp 0L,162,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack17 = pos cmp 0L, 162))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack18 = (int) bitIndex,153,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack18 = (int) bitIndex, 153))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack5 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>,223,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack5 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>, 223)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack7 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack18 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack18 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numentries>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,total := @parameter1: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack7 = wordIndex + 1,150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack7 = wordIndex + 1, 150)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7),150,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void ensureSize(int)>($stack7), 150))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119),85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,count = $stack120 + 1L,85,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, count = $stack120 + 1L, 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack130 = count,75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack130 = count, 75))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack9 = (int) bitIndex,155,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack9 = (int) bitIndex, 155))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack34 = (long) i,260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack34 = (long) i, 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>,$stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,93,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, $stack7 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 93)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,168,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack19 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 168))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack48 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack47),109,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack48 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack47), 109)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,specialinvoke $stack44.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>($stack48, $stack51),109,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack44.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>($stack48, $stack51), 109))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,wordNum = (int) $stack3,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, wordNum = (int) $stack3, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum),122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack7 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($stack6, wordNum), 122)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7,122,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long[] words> = $stack7, 122))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58),112,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack59 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack58), 112))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack32 = (int) chunkIndex,184,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack32 = (int) chunkIndex, 184))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack29 = pos % 64L,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack29 = pos % 64L, 183)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,chunkIndex = 63L - $stack29,183,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, chunkIndex = 63L - $stack29, 183))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,273,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack16 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 273)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,numbits := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack1 = -1L << numbits,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73) => (<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>, $stack1 = -1L << numbits, 48)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,$stack2 = $stack1 ^ -1L,48,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack6 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>(numbits), 73)) => Node(<org.rdfhdt.hdt.util.BitUtil: long maxVal(int)>,return $stack2,48,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max),263,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, i = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>(max), 263)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i,272,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits> = i, 272)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>,274,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack19 = this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: int numbits>, 274)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,bitsField := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,return $stack6,90,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack3 = (long) bitsField,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack3 = (long) bitsField, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack4 = $stack3 * total,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack4 = $stack3 * total, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack5 = $stack4 + 63L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>, $stack5 = $stack4 + 63L, 90)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>,$stack6 = $stack5 / 64L,90,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity),75,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, size = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long numWordsFor(int,long)>(numbits, capacity), 75)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,$stack9 = (int) size,78,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack9 = (int) size, 78)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,$stack10 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),78,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack10 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 78)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>,$stack11 = newarray (long)[$stack10],78,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>, specialinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>(numbits, 0L), 67) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int,long)>, $stack11 = newarray (long)[$stack10], 78))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack2 = bitIndex >>> 6,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>, $stack2 = bitIndex >>> 6, 89)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>,$stack3 = (int) $stack2,89,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex),149,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, wordIndex = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: int wordIndex(long)>(bitIndex), 149))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack22 = (int) superBlockIndex,177,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack22 = (int) superBlockIndex, 177))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34),260,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, value = virtualinvoke this.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack34), 260)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,$stack39 = value,259,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack39 = value, 259)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>,max = $stack39,261,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>, $stack36 = value cmp max, 261)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,n := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l0 := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = (int) l0,1424,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = (int) l0, 1424)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 16,1425,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 16, 1425)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 8,1426,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 8, 1426)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l3 = l3 << 2,1428,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, l3 = l3 << 2, 1428)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,$stack10 = l3 >>> 31,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44) => (<java.lang.Long: int numberOfLeadingZeros(long)>, $stack10 = l3 >>> 31, 1427)) => Node(<java.lang.Long: int numberOfLeadingZeros(long)>,l2 = l2 - $stack10,1427,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n),44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72) => (<org.rdfhdt.hdt.util.BitUtil: int log2(long)>, $stack4 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(n), 44)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,$stack5 = 64 - $stack4,44,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack26 = staticinvoke <org.rdfhdt.hdt.util.BitUtil: int log2(long)>($stack25), 72)) => Node(<org.rdfhdt.hdt.util.BitUtil: int log2(long)>,return $stack5,44,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,superBlockIndex = pos / 256L,172,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, superBlockIndex = pos / 256L, 172)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack37 = (int) superBlockIndex,175,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack37 = (int) superBlockIndex, 175))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack18 = data[$stack15],128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack18 = data[$stack15], 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack20 = $stack18 << $stack17,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack20 = $stack18 << $stack17, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack21 = $stack20 >>> $stack19,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack21 = $stack20 >>> $stack19, 128)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack5 = bitIndex cmp 0L,146,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack5 = bitIndex cmp 0L, 146))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>,120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack2 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits>, 120)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>,$stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2),120,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>(), 166) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void updateIndex()>, virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void trimToSize()>(), 92) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void trimToSize()>, $stack3 = staticinvoke <org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numWords(long)>($stack2), 120))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack14 >>> j,127,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, result = $stack14 >>> j, 127)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = result | $stack21,128,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value),154,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack14 = bitIndex + 1L,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack14 = bitIndex + 1L, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14),158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack16 = staticinvoke <java.lang.Math: long max(long,long)>($stack15, $stack14), 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16,158,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: long numbits> = $stack16, 158)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>,$stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>,393,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack1 = this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long numbits>, 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,pos := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,blockIndex = pos / 64L,180,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, blockIndex = pos / 64L, 180)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>,$stack25 = (int) blockIndex,181,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack60 = virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>(), 112) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long countOnes()>, $stack2 = virtualinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>($stack1), 393) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: long rank1(long)>, $stack25 = (int) blockIndex, 181))), List(Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,bitPos = index * $stack10,120,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, bitPos = index * $stack10, 120)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack12 = bitPos % 64L,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack12 = bitPos % 64L, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,j = (int) $stack12,122,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, j = (int) $stack12, 122)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack22 = 64 - j,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack22 = 64 - j, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack23 = $stack22 - bitsField,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack23 = $stack22 - bitsField, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,$stack26 = $stack24 << $stack23,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>, $stack26 = $stack24 << $stack23, 125)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>,result = $stack26 >>> $stack25,125,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85) => (<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>, $stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position), 226)) => Node(<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>,$stack9 = staticinvoke <org.rdfhdt.hdt.compact.sequence.SequenceLog64: long getField(long[],int,long)>($stack8, $stack7, position),226,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack120 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>($stack119), 85)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i),97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack107 = virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: long get(long)>(i), 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,tempCountPred = tempCountPred + $stack107,97,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, tempCountPred = tempCountPred + $stack107, 97)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack108 = tempCountPred - 1L,98,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, $stack108 = tempCountPred - 1L, 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,bitIndex := @parameter0: long,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154)) => Node(<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitIndex < 0: "),147,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke i#6.<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>($stack108, 1), 98) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap375: void set(long,boolean)>, specialinvoke this.<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>(bitIndex, value), 154) => (<org.rdfhdt.hdt.compact.bitmap.Bitmap64: void set(long,boolean)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('bitIndex < 0: '), 147)))]
Visited methods: 49
 Analysis results
----------------------------
 Number of conflicts: 187
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,72700
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at java.lang.String.valueOf(String.java:2994)
	at scala.collection.mutable.StringBuilder.append(StringBuilder.scala:203)
	at scala.collection.TraversableOnce.$anonfun$addString$1(TraversableOnce.scala:367)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableOnce.addString(TraversableOnce.scala:360)
	at scala.collection.TraversableOnce.addString$(TraversableOnce.scala:356)
	at scala.collection.AbstractTraversable.addString(Traversable.scala:108)
	at scala.collection.TraversableOnce.mkString(TraversableOnce.scala:326)
	at scala.collection.TraversableOnce.mkString$(TraversableOnce.scala:325)
	at scala.collection.AbstractTraversable.mkString(Traversable.scala:108)
	at scala.collection.TraversableLike.toString(TraversableLike.scala:603)
	at scala.collection.TraversableLike.toString$(TraversableLike.scala:603)
	at scala.collection.SeqLike.toString(SeqLike.scala:693)
	at scala.collection.SeqLike.toString$(SeqLike.scala:693)
	at scala.collection.AbstractSeq.toString(Seq.scala:45)
	at br.unb.cic.soot.graph.Graph.$anonfun$reportConflicts$1(Graph.scala:498)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:321)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:51)
	at scala.collection.SetLike.map(SetLike.scala:104)
	at scala.collection.SetLike.map$(SetLike.scala:104)
	at scala.collection.AbstractSet.map(Set.scala:51)
	at br.unb.cic.soot.graph.Graph.reportConflicts(Graph.scala:498)
	at br.unb.cic.soot.svfa.SVFA.reportConflictsSVG(SVFA.scala:28)
	at br.unb.cic.analysis.Main.runDFPAnalysis(Main.java:458)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:261)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,50300
Time to perform PDG 0,74900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/75f3d402bc177bac168e7ea810c16f6d98776f89/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48300
Time to perform PDG 0,74200
CONFLICTS: [List(Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,$stack22 = new org.rdfhdt.hdt.compact.sequence.SequenceLog64,72,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, specialinvoke $stack22.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void <init>(int)>($stack26), 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,predCount = $stack22,72,SourceNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, predCount = $stack22, 72)) => Node(<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>,virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(),91,SinkNode, path: (<org.rdfhdt.hdt.triples.impl.PredicateIndexArray: void generate(org.rdfhdt.hdt.listener.ProgressListener)>, virtualinvoke predCount.<org.rdfhdt.hdt.compact.sequence.SequenceLog64: void aggressiveTrimToSize()>(), 91)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
