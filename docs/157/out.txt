SOURCE=>BASE: Node(<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>,$stack1 = this.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper>,121,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack25 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 52)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 59))
SINK=>BASE: Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(),40,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(), 40)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterMatch = (spark.routematch.RouteMatch) $stack18,70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterMatch = (spark.routematch.RouteMatch) $stack18, 70)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,this := @this: spark.routematch.RouteMatch,-1,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,$stack1 = this.<spark.routematch.RouteMatch: java.lang.Object target>,48,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(),41,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,request#3 = (spark.FilterImpl) filterTarget,58,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, request#3 = (spark.FilterImpl) filterTarget, 58)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29), 59))

SOURCE=>BASE: Node(<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>,$stack1 = this.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper>,121,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack25 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 52)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 59))
SINK=>BASE: Node(<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>,$stack9 = new java.util.ArrayList,107,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36) => (<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>, specialinvoke $stack9.<java.util.ArrayList: void <init>()>(), 107)) => Node(<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>,matchSet = $stack9,107,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(),40,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(), 40)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterMatch = (spark.routematch.RouteMatch) $stack18,70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterMatch = (spark.routematch.RouteMatch) $stack18, 70)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,this := @this: spark.routematch.RouteMatch,-1,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,$stack1 = this.<spark.routematch.RouteMatch: java.lang.Object target>,48,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(),41,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,request#3 = (spark.FilterImpl) filterTarget,58,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, request#3 = (spark.FilterImpl) filterTarget, 58)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29), 59))

SOURCE=>BASE: Node(<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>,$stack1 = this.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper>,121,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack25 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 52)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack29 = virtualinvoke context.<spark.http.matching.RouteContext: spark.http.matching.ResponseWrapper responseWrapper()>(), 59))
SINK=>BASE: Node(<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>,$stack1 = this.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher>,52,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(),40,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(), 40)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterMatch = (spark.routematch.RouteMatch) $stack18,70,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterMatch = (spark.routematch.RouteMatch) $stack18, 70)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,this := @this: spark.routematch.RouteMatch,-1,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.routematch.RouteMatch: java.lang.Object getTarget()>,$stack1 = this.<spark.routematch.RouteMatch: java.lang.Object target>,48,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(),41,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,request#3 = (spark.FilterImpl) filterTarget,58,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, request#3 = (spark.FilterImpl) filterTarget, 58)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29),59,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, virtualinvoke request#3.<spark.FilterImpl: void handle(spark.Request,spark.Response)>($stack28, $stack29), 59))

List(Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(),40,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(), 40)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),70,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterMatch = (spark.routematch.RouteMatch) $stack18,70,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterMatch = (spark.routematch.RouteMatch) $stack18, 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(),41,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack20 = filterTarget instanceof spark.FilterImpl,43,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack20 = filterTarget instanceof spark.FilterImpl, 43)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,if $stack20 == 0 goto (branch),43,SimpleNode, path: ) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack27 = content instanceof java.lang.String,54,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack27 = content instanceof java.lang.String, 54)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,if $stack27 == 0 goto request#3 = (spark.FilterImpl) filterTarget,54,SinkNode, path: ) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack33 = (java.lang.String) content,55,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack33 = (java.lang.String) content, 55)))

List(Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack10 = virtualinvoke context.<spark.http.matching.RouteContext: spark.route.Routes routeMatcher()>(), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13),36,SourceNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, matchSet = virtualinvoke $stack10.<spark.route.Routes: java.util.List findMultiple(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack11, $stack12, $stack13), 36)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(),40,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, l3 = interfaceinvoke matchSet.<java.util.List: java.util.Iterator iterator()>(), 40)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),70,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack18 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterMatch = (spark.routematch.RouteMatch) $stack18,70,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterMatch = (spark.routematch.RouteMatch) $stack18, 70)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(),41,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, filterTarget = virtualinvoke filterMatch.<spark.routematch.RouteMatch: java.lang.Object getTarget()>(), 41)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack20 = filterTarget instanceof spark.FilterImpl,43,SimpleNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack20 = filterTarget instanceof spark.FilterImpl, 43)) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,if $stack20 == 0 goto (branch),43,SimpleNode, path: ) => Node(<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>,$stack27 = content instanceof java.lang.String,54,SinkNode, path: (<spark.http.matching.AfterFilters: void execute(spark.http.matching.RouteContext)>, $stack27 = content instanceof java.lang.String, 54)))

