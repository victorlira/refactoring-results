Running soot scenario log-synth;com.mapr.synth.Synth;call();83316ef849229d87b24ce5d0d6d54f1f76764759
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 3,96600
An error occurred in getInvokeExpr with args: specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 1 Inter 12,72300
Configure Soot Confluence 2 Inter 2,50900
An error occurred in getInvokeExpr with args: specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.nodeToString(ConfluenceConflict.java:126)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.lambda$pathToString$0(ConfluenceConflict.java:118)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.pathToString(ConfluenceConflict.java:120)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.toString(ConfluenceConflict.java:41)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.hashCode(ConfluenceConflict.java:135)
	at java.util.HashMap.hash(HashMap.java:339)
	at java.util.HashMap.put(HashMap.java:612)
	at java.util.HashSet.add(HashSet.java:220)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.intersectPathsByLastNode(DFPConfluenceAnalysis.java:232)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.execute(DFPConfluenceAnalysis.java:157)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:553)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 3,74000
Runtime: 0.043s
OA interference in class Synth$ReportingWorker, method java.lang.Integer call(), execution of line 223 overrides 223, assigning to variable writer#3, 
Caused by line 223 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)
at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)
And line 223 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)
at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)
 
OA interference in class Synth$ReportingWorker, method java.lang.Integer call(), execution of line 247 overrides 247, assigning to variable PrintWriter.<java.io.PrintWriter: java.io.Writer out>, 
Caused by line 247 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)
at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)
And line 247 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)
at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)
 
OA interference in class Synth$ReportingWorker, method java.lang.Integer call(), execution of line 223 overrides 223, assigning to variable <java.lang.Integer: int[] sizeTable>, 
Caused by line 223 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)
at java.lang.Integer.<clinit>(Integer.java:467)
And line 223 flow:
at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)
at java.lang.Integer.<clinit>(Integer.java:467)
 
Time to perform OA Inter 7,36000
OA Inter Visited methods: 78
 Analysis results
----------------------------
 Number of conflicts: 322
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 3,58900
An error occurred in getInvokeExpr with args: specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 13,58800
Depth limit: 5
CONFLICTS: DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in writer = $stack13 and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line -1 to 1885, defined in tmp$2057834672 = (javax.xml.stream.XMLStreamException) e and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line -1 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in writer = $stack13 and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in e = $stack5 and propagated in specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, e = $stack5, 309)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key) and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in writer = $stack13 and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack6 = new java.io.IOException and propagated in specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in e = $stack8 and propagated in virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e = $stack8, 377)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>(), 378)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line -1 to 1887, defined in tmp$2057834672 = (javax.xml.stream.XMLStreamException) e and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line -1 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 1889, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 365 to 364, defined in $stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>() and propagated in specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>()
Caused by line 365 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 365)
Caused by line 364 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key) and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack33 = new freemarker.core.Environment and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 229, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1889, defined in g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0) and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1882, defined in g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0) and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 26, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 26 flow: path: (<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>(), 26)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in e#2 = $stack7 and propagated in virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e#2 = $stack7, 379)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 372, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack33 = new freemarker.core.Environment and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 1885, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 235, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 361 to 361, defined in $stack23 = new java.lang.StringBuffer and propagated in specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>()
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 351 to 355, defined in wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>() and propagated in specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper)
Caused by line 351 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack33 = new freemarker.core.Environment and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack2 = new java.util.LinkedHashMap and propagated in specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 1887, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 242, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line -1 to 223, defined in tmp$2057834672 = (javax.xml.stream.XMLStreamException) e and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line -1 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 372, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 362, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 503 to 1887, defined in $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672) and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 503 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Data flows from execution of line 1881 to 239, defined in $stack5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT> and propagated in $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>()
Caused by line 1881 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)
Caused by line 239 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <freemarker.core.Environment: void process()>
Data flows from execution of line 238 to 238, defined in $stack11 = this.<freemarker.core.Environment: java.io.Writer out> and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16[1] = $stack21 and propagated in virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack16)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in writer = $stack13 and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in writer = $stack13 and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 361, defined in $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 372, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack80 = <java.lang.System: java.io.PrintStream out> and propagated in virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack33 = new freemarker.core.Environment and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 362, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 351 to 362, defined in wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>() and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 351 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack33 = new freemarker.core.Environment and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 351 to 372, defined in wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>() and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 351 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote> and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 223, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 357 to 372, defined in wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel) and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 357 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 362, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 364 to 364, defined in $stack10 = new java.lang.StringBuffer and propagated in specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>()
Caused by line 364 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)
Caused by line 364 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 502 to 1882, defined in e = $stack9 and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 502 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack4 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw> and propagated in interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n")
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack80 = <java.lang.System: java.io.PrintStream out> and propagated in specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 505 to 506, defined in e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0) and propagated in specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2)
Caused by line 505 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0), 505)
Caused by line 506 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 355 to 355, defined in $stack34 = new freemarker.template.SimpleHash and propagated in specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
DF interference in <freemarker.core.Environment: void process()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 372, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 1887, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 502 to 1887, defined in e = $stack9 and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 502 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 1885, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line -1 to 1889, defined in tmp$2057834672 = (javax.xml.stream.XMLStreamException) e and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line -1 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Data flows from execution of line 1888 to 239, defined in $stack10 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE> and propagated in $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>()
Caused by line 1888 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)
Caused by line 239 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.core.Environment: void process()>
Data flows from execution of line 235 to 235, defined in $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>() and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 503 to 223, defined in $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672) and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 503 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote> and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 503 to 1885, defined in $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672) and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 503 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 506, defined in $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>() and propagated in specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)
Caused by line 506 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack24 = newarray (java.lang.Object)[2] and propagated in virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack24)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0) and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.core.Environment: void process()>
Data flows from execution of line 245 to 245, defined in $stack15 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv> and propagated in virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv)
Caused by line 245 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)
Caused by line 245 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 503 to 1882, defined in $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672) and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 503 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack10 = newarray (java.lang.Object)[0] and propagated in virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $stack10)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Data flows from execution of line 1884 to 239, defined in $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE> and propagated in $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>()
Caused by line 1884 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)
Caused by line 239 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 362 to 361, defined in $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>() and propagated in specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>()
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 238, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0) and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 501 to 506, defined in sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw) and propagated in specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2)
Caused by line 501 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw), 501)
Caused by line 506 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 365 to 365, defined in $stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12) and propagated in specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21)
Caused by line 365 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12), 365)
Caused by line 365 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 503 to 1889, defined in $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672) and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 503 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 362, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19 and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Data flows from execution of line 1887 to 1887, defined in $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config) and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config), 1887)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in writer = $stack13 and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 502 to 1885, defined in e = $stack9 and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 502 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1889, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in writer = $stack13 and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 232, defined in $stack33 = new freemarker.core.Environment and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1889, defined in tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 355, defined in $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 234, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in tmp$869454818 = (java.io.IOException) e#2 and propagated in virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, tmp$869454818 = (java.io.IOException) e#2, -1)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack13 = new java.io.PrintWriter and propagated in specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in writer = $stack13 and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 362 to 362, defined in $stack22 = new java.lang.IllegalArgumentException and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 362 to 362, defined in $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>() and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1885, defined in g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0) and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 355 to 372, defined in $stack34 = new freemarker.template.SimpleHash and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 229, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Data flows from execution of line 1879 to 1885, defined in config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>() and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config)
Caused by line 1879 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)
Caused by line 1885 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 502 to 223, defined in e = $stack9 and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 502 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 242, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 242 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 232, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>()
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 232 flow: path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 365 to 365, defined in $stack9 = new java.lang.IllegalArgumentException and propagated in specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21)
Caused by line 365 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)
Caused by line 365 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)
DF interference in <freemarker.core.Environment: void process()>
Data flows from execution of line 229 to 229, defined in $stack6 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv> and propagated in virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
Caused by line 229 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in writer = $stack13 and propagated in virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1887, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 1887 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 361, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>()
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in virtualinvoke $stack3.<freemarker.core.Environment: void process()>()
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 372, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 372, defined in writer = $stack13 and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema> and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 1882, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 355, defined in $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template> and propagated in specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)
Caused by line 355 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1882, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in writer = $stack13 and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null) and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>() and propagated in virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 1882, defined in tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 247 to 223, defined in $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 247 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack33 = new freemarker.core.Environment and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line -1 to 1882, defined in tmp$2057834672 = (javax.xml.stream.XMLStreamException) e and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>()
Caused by line -1 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)
Caused by line 1882 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack8 = newarray (java.lang.Object)[1] and propagated in virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote> and propagated in staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = new com.fasterxml.jackson.databind.node.ObjectNode and propagated in staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 506, defined in $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper> and propagated in specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)
Caused by line 506 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 359 to 372, defined in dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 359 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 362, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 362 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19 and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields> and propagated in staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>
Data flows from execution of line 502 to 1889, defined in e = $stack9 and propagated in virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>()
Caused by line 502 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)
Caused by line 1889 flow: path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>
Data flows from execution of line 124 to 506, defined in $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> and propagated in specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2)
Caused by line 124 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)
Caused by line 506 flow: path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)
DF interference in <com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 238, defined in $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>() and propagated in virtualinvoke $stack11.<java.io.Writer: void flush()>()
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)
Caused by line 238 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 223, defined in $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>() and propagated in interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)
DF interference in <freemarker.core.Environment: void process()>
Data flows from execution of line 228 to 245, defined in savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>() and propagated in virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv)
Caused by line 228 flow: path: (<freemarker.core.Environment: void process()>, savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>(), 228)
Caused by line 245 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 348 to 372, defined in dataModelHash = (freemarker.template.TemplateHashModel) dataModel and propagated in specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out)
Caused by line 348 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)
Caused by line 372 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 234, defined in $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory> and propagated in virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)
Caused by line 234 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Data flows from execution of line 223 to 235, defined in $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler> and propagated in virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8)
Caused by line 223 flow: path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)
Caused by line 235 flow: path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>
Data flows from execution of line 351 to 361, defined in wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>() and propagated in specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>()
Caused by line 351 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)
Caused by line 361 flow: path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack34 = new freemarker.template.SimpleHash,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = $stack34,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = $stack34, 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,return $stack0,17,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,return $stack2,124,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,tmp$869454818 = (java.io.IOException) e#2,-1,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, tmp$869454818 = (java.io.IOException) e#2, -1)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(),380,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0),505,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0), 505)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack34 = new freemarker.template.SimpleHash,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack24 = newarray (java.lang.Object)[2],322,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack24),322,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,return $stack33,372,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack80 = <java.lang.System: java.io.PrintStream out>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,out := @parameter3: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,out := @parameter4: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8),292,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30))), List(Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: )), List(Node(<freemarker.core.Environment: void process()>,savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>(),228,SourceNode, path: (<freemarker.core.Environment: void process()>, savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>(), 228)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv),245,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,return $stack1,177,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,return $stack1,319,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack16[1] = $stack21,325,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack16),325,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(),86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(), 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,return $stack2,124,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack10 = newarray (java.lang.Object)[0],330,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $stack10),330,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<freemarker.core.Environment: void process()>,$stack15 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv>,245,SourceNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv),245,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack10 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>,1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack6 = new java.io.IOException,310,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e),310,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<freemarker.core.Environment: void process()>,$stack6 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv>,229,SourceNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,e = $stack5,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, e = $stack5, 309)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e),310,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x2 := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,$stack8 = newarray (java.lang.Object)[1],292,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8),292,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if template == null goto writer#3 = 0,274,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,$stack2 = new java.util.LinkedHashMap,31,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(),31,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack80 = <java.lang.System: java.io.PrintStream out>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,out := @parameter3: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out),275,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack14 = virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" didn\'t convert "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack14 = virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' didn\'t convert '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack17 = virtualinvoke $stack14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack17 = virtualinvoke $stack14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack18 = virtualinvoke $stack17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to a TemplateHashModel. Generally, you want to use a Map<String, Object> or a "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to a TemplateHashModel. Generally, you want to use a Map<String, Object> or a '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JavaBean as the root-map (aka. data-model) parameter. The Map key-s or JavaBean "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('JavaBean as the root-map (aka. data-model) parameter. The Map key-s or JavaBean '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack20 = virtualinvoke $stack19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("property names will be the variable names in the template."),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack20 = virtualinvoke $stack19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('property names will be the variable names in the template.'), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack21 = virtualinvoke $stack20.<java.lang.StringBuffer: java.lang.String toString()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuffer: java.lang.String toString()>(), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21),365,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365))), List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>(),26,SinkNode, path: (<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>(), 26))), List(Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(),86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(), 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361))), List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer#3 = writer#3 + 1,281,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer#3 = writer#3 + 1, 281)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if writer#3 >= count goto return count,281,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack4 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>,308,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n"),308,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack13 = new java.io.PrintWriter,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out),275,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: )), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw),501,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw), 501)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x1 := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT>,1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,e#2 = $stack7,379,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e#2 = $stack7, 379)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,tmp$869454818 = (java.io.IOException) e#2,-1,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, tmp$869454818 = (java.io.IOException) e#2, -1)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(),380,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack1,107,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if template == null goto writer#3 = 0,274,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,return count,286,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,e = $stack8,377,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e = $stack8, 377)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>(),378,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>(), 378))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if i >= count goto (branch),277,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,return $stack1,177,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882))), List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 365)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.String getName()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.String getName()>(), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack10 = new java.lang.StringBuffer,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(),364,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262))), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack10 = new java.lang.StringBuffer,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(),364,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1887,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config), 1887)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return tmp$220689838,506,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,i = 0,277,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, i = i + 1, 277)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if i >= count goto (branch),277,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278))), List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: )), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376))), List(Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295))), List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack10 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>,1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: )), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if writer#3 >= count goto return count,281,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: )), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: )), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack9 = new java.lang.IllegalArgumentException,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21),365,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232))), List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889))), List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: )), List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309))), List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack22 = new java.lang.IllegalArgumentException,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))]
Visited methods: 135
 Analysis results
----------------------------
 Number of conflicts: 381
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 3,77500
An error occurred in getInvokeExpr with args: specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at java.lang.String.valueOf(String.java:2994)
	at scala.collection.mutable.StringBuilder.append(StringBuilder.scala:203)
	at scala.collection.TraversableOnce.$anonfun$addString$1(TraversableOnce.scala:362)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableOnce.addString(TraversableOnce.scala:360)
	at scala.collection.TraversableOnce.addString$(TraversableOnce.scala:356)
	at scala.collection.AbstractTraversable.addString(Traversable.scala:108)
	at scala.collection.TraversableOnce.mkString(TraversableOnce.scala:326)
	at scala.collection.TraversableOnce.mkString$(TraversableOnce.scala:325)
	at scala.collection.AbstractTraversable.mkString(Traversable.scala:108)
	at scala.collection.TraversableLike.toString(TraversableLike.scala:603)
	at scala.collection.TraversableLike.toString$(TraversableLike.scala:603)
	at scala.collection.SeqLike.toString(SeqLike.scala:693)
	at scala.collection.SeqLike.toString$(SeqLike.scala:693)
	at scala.collection.AbstractSeq.toString(Seq.scala:45)
	at br.unb.cic.soot.graph.Graph.$anonfun$reportConflicts$1(Graph.scala:498)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:321)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:51)
	at scala.collection.SetLike.map(SetLike.scala:104)
	at scala.collection.SetLike.map$(SetLike.scala:104)
	at scala.collection.AbstractSet.map(Set.scala:51)
	at br.unb.cic.soot.graph.Graph.reportConflicts(Graph.scala:498)
	at br.unb.cic.soot.svfa.SVFA.reportConflictsSVG(SVFA.scala:28)
	at br.unb.cic.analysis.Main.runDFPAnalysis(Main.java:458)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:261)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 3,56800
Time to perform PDG 4,66900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-synth/83316ef849229d87b24ce5d0d6d54f1f76764759/original-without-dependencies/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 3,51200
Time to perform PDG 5,08700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
