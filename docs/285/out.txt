source(com.mapr.synth.Synth$ReportingWorker, generateFile, 281, writer#3 = 0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 281, writer#3 = 0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 281, writer#3 = writer#3 + 1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 281, writer#3 = writer#3 + 1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:281)])

source(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack51 = this.<com.mapr.synth.Synth$ReportingWorker: java.util.concurrent.atomic.AtomicLong rowCount>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack51 = this.<com.mapr.synth.Synth$ReportingWorker: java.util.concurrent.atomic.AtomicLong rowCount>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)])

source(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)])

source(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)])

source(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)])

source(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack53 = (long) $stack52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 247, $stack53 = (long) $stack52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247)])

source(com.mapr.synth.Synth, <clinit>, 372, <com.mapr.synth.Synth: com.google.common.base.Joiner withTabs> = $stack1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:372)]) => sink(com.mapr.synth.Synth, <clinit>, 372, <com.mapr.synth.Synth: com.google.common.base.Joiner withTabs> = $stack1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:372)])

source(com.mapr.synth.Synth$ReportingWorker, format, 292, $stack8 = newarray (java.lang.Object)[1], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:292)]) => sink(com.mapr.synth.Synth$ReportingWorker, format, 292, $stack8 = newarray (java.lang.Object)[1], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:292)])

source(com.mapr.synth.Synth$ReportingWorker, format, 292, $stack8[0] = $stack11, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:292)]) => sink(com.mapr.synth.Synth$ReportingWorker, format, 292, $stack8[0] = $stack11, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:292)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 275, $stack13 = new java.io.PrintWriter, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 275, $stack13 = new java.io.PrintWriter, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 275, writer = $stack13, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 275, writer = $stack13, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(com.mapr.synth.Synth, formatTemplate, 379, e#2 = $stack7, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:379)]) => sink(com.mapr.synth.Synth, formatTemplate, 379, e#2 = $stack7, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:379)])

source(com.mapr.synth.Synth, formatTemplate, -1, tmp$864202178 = (java.io.IOException) e#2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:-1)]) => sink(com.mapr.synth.Synth, formatTemplate, -1, tmp$864202178 = (java.io.IOException) e#2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:-1)])

source(java.lang.Integer, valueOf, 831, $stack5 = <java.lang.Integer$IntegerCache: java.lang.Integer[] cache>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)]) => sink(java.lang.Integer, valueOf, 831, $stack5 = <java.lang.Integer$IntegerCache: java.lang.Integer[] cache>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)])

source(java.lang.Integer, valueOf, 831, $stack4 = l0 + 128, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)]) => sink(java.lang.Integer, valueOf, 831, $stack4 = l0 + 128, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)])

source(java.lang.Integer, valueOf, 831, $stack6 = $stack5[$stack4], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)]) => sink(java.lang.Integer, valueOf, 831, $stack6 = $stack5[$stack4], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:831)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.Writer out> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.Writer out> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: boolean trouble> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: boolean trouble> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.util.Formatter formatter> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.util.Formatter formatter> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.PrintStream psOut> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.PrintStream psOut> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.Writer out> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.Writer out> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: boolean trouble> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: boolean trouble> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.util.Formatter formatter> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.util.Formatter formatter> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.PrintStream psOut> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)]) => sink(java.io.PrintWriter, <init>, -1, PrintWriter.<java.io.PrintWriter: java.io.PrintStream psOut> = null, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:247), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:275)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 328, x = separator, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:328)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 328, x = separator, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:328)])

source(java.lang.Integer, <clinit>, 467, $stack4[3] = 9999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[3] = 9999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4 = newarray (int)[10], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4 = newarray (int)[10], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[0] = 9, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[0] = 9, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[1] = 99, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[1] = 99, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[2] = 999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[2] = 999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[8] = 999999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[8] = 999999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[9] = 2147483647, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[9] = 2147483647, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[4] = 99999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[4] = 99999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[5] = 999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[5] = 999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[6] = 9999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[6] = 9999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, $stack4[7] = 99999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, $stack4[7] = 99999999, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(java.lang.Integer, <clinit>, 467, <java.lang.Integer: int[] sizeTable> = $stack4, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)]) => sink(java.lang.Integer, <clinit>, 467, <java.lang.Integer: int[] sizeTable> = $stack4, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:467)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 317, $stack13 = <com.mapr.synth.Synth$2: int[] $SwitchMap$com$mapr$synth$Synth$Quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:317)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 317, $stack13 = <com.mapr.synth.Synth$2: int[] $SwitchMap$com$mapr$synth$Synth$Quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:317)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 317, $stack15 = $stack13[$stack14], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:317)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 317, $stack15 = $stack13[$stack14], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:317)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24[1] = $stack28, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 322, $stack24[1] = $stack28, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:322)])

source(java.lang.Integer, <init>, 850, l0.<java.lang.Integer: int value> = l1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832), at java.lang.Integer.<init>(Integer.java:850)]) => sink(java.lang.Integer, <init>, 850, l0.<java.lang.Integer: int value> = l1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832), at java.lang.Integer.<init>(Integer.java:850)])

source(java.lang.Integer, <clinit>, 355, $stack3[8] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[8] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[2] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[2] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3 = newarray (char)[100], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3 = newarray (char)[100], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[31] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[31] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[60] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[60] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[20] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[20] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[46] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[46] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[52] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[52] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[15] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[15] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[73] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[73] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[87] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[87] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[88] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[88] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[35] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[35] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[79] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[79] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[32] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[32] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[1] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[1] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[3] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[3] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[4] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[4] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[19] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[19] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[30] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[30] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[28] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[28] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[89] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[89] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[98] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[98] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[65] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[65] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[78] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[78] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[54] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[54] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[90] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[90] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[59] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[59] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[72] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[72] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[58] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[58] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[5] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[5] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[21] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[21] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[57] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[57] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[69] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[69] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[94] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[94] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[95] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[95] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[22] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[22] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[13] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[13] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[37] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[37] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[92] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[92] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[75] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[75] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[83] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[83] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[42] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[42] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[71] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[71] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[76] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[76] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[99] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[99] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[34] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[34] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[44] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[44] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[6] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[6] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[11] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[11] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[82] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[82] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[18] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[18] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[24] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[24] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[51] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[51] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[33] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[33] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, <java.lang.Integer: char[] DigitOnes> = $stack3, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, <java.lang.Integer: char[] DigitOnes> = $stack3, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[38] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[38] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[61] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[61] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[56] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[56] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[36] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[36] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[9] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[9] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[14] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[14] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[96] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[96] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[26] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[26] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[67] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[67] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[70] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[70] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[29] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[29] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[25] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[25] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[7] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[7] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[12] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[12] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[39] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[39] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[66] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[66] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[93] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[93] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[84] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[84] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[27] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[27] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[97] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[97] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[74] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[74] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[86] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[86] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[41] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[41] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[48] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[48] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[16] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[16] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[77] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[77] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[50] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[50] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[68] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[68] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[23] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[23] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[40] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[40] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[45] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[45] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[80] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[80] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[81] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[81] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[91] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[91] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[63] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[63] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[85] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[85] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[55] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[55] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[62] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[62] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[64] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[64] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[43] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[43] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[47] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[47] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[17] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[17] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[10] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[10] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[49] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[49] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(java.lang.Integer, <clinit>, 355, $stack3[53] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)]) => sink(java.lang.Integer, <clinit>, 355, $stack3[53] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:355)])

source(com.mapr.synth.Synth$ReportingWorker, format, 290, $stack5 = <com.mapr.synth.Synth$2: int[] $SwitchMap$com$mapr$synth$Synth$Format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:290)]) => sink(com.mapr.synth.Synth$ReportingWorker, format, 290, $stack5 = <com.mapr.synth.Synth$2: int[] $SwitchMap$com$mapr$synth$Synth$Format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:290)])

source(com.mapr.synth.Synth$ReportingWorker, format, 290, $stack7 = $stack5[$stack6], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:290)]) => sink(com.mapr.synth.Synth$ReportingWorker, format, 290, $stack7 = $stack5[$stack6], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:290)])

source(com.mapr.synth.Synth$ReportingWorker, printXml, 308, $stack4 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:308)]) => sink(com.mapr.synth.Synth$ReportingWorker, printXml, 308, $stack4 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:308)])

source(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack83 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack83 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)])

source(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)])

source(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)])

source(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack80 = <java.lang.System: java.io.PrintStream out>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack80 = <java.lang.System: java.io.PrintStream out>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)])

source(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)]) => sink(com.mapr.synth.Synth$ReportingWorker, call, 223, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223)])

source(com.mapr.synth.Synth, formatTemplate, 377, e = $stack8, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:377)]) => sink(com.mapr.synth.Synth, formatTemplate, 377, e = $stack8, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:377)])

source(java.lang.Integer, <clinit>, 77, $stack1[18] = 105, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[18] = 105, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[7] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[7] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[1] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[1] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1 = newarray (char)[36], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1 = newarray (char)[36], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[14] = 101, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[14] = 101, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[15] = 102, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[15] = 102, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[11] = 98, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[11] = 98, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[13] = 100, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[13] = 100, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[28] = 115, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[28] = 115, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[27] = 114, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[27] = 114, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[19] = 106, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[19] = 106, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[30] = 117, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[30] = 117, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[26] = 113, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[26] = 113, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[25] = 112, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[25] = 112, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[2] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[2] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[3] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[3] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[23] = 110, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[23] = 110, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[31] = 118, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[31] = 118, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[34] = 121, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[34] = 121, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[20] = 107, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[20] = 107, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[17] = 104, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[17] = 104, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[22] = 109, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[22] = 109, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[8] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[8] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[24] = 111, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[24] = 111, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[9] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[9] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[32] = 119, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[32] = 119, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, <java.lang.Integer: char[] digits> = $stack1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, <java.lang.Integer: char[] digits> = $stack1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[12] = 99, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[12] = 99, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[4] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[4] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[33] = 120, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[33] = 120, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[29] = 116, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[29] = 116, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[10] = 97, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[10] = 97, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[5] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[5] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[6] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[6] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[35] = 122, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[35] = 122, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[21] = 108, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[21] = 108, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(java.lang.Integer, <clinit>, 77, $stack1[16] = 103, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)]) => sink(java.lang.Integer, <clinit>, 77, $stack1[16] = 103, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:77)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 278, $stack15 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Format format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 278, $stack15 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Format format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 278, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 278, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278)])

source(com.mapr.synth.Synth$ReportingWorker, printXml, 310, $stack6 = new java.io.IOException, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:310)]) => sink(com.mapr.synth.Synth$ReportingWorker, printXml, 310, $stack6 = new java.io.IOException, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:310)])

source(java.lang.Integer, <clinit>, 72, <java.lang.Integer: java.lang.Class TYPE> = $stack0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:72)]) => sink(java.lang.Integer, <clinit>, 72, <java.lang.Integer: java.lang.Class TYPE> = $stack0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:72)])

source(com.mapr.synth.Synth$ReportingWorker, printXml, 309, e = $stack5, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:309)]) => sink(com.mapr.synth.Synth$ReportingWorker, printXml, 309, e = $stack5, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:309)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 315, x = "", [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:315)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 315, x = "", [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:315)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 331, name = (java.lang.String) $stack12, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:331)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 331, name = (java.lang.String) $stack12, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:331)])

source(com.google.common.base.Joiner, on, 71, $stack1 = new com.google.common.base.Joiner, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71)]) => sink(com.google.common.base.Joiner, on, 71, $stack1 = new com.google.common.base.Joiner, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 277, i = 0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:277)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 277, i = 0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:277)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 277, i = i + 1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:277)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 277, i = i + 1, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:277)])

source(com.mapr.synth.Synth, <clinit>, 371, <com.mapr.synth.Synth: com.google.common.base.Joiner withCommas> = $stack0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371)]) => sink(com.mapr.synth.Synth, <clinit>, 371, <com.mapr.synth.Synth: com.google.common.base.Joiner withCommas> = $stack0, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371)])

source(java.lang.Throwable, printStackTrace, 634, $stack1 = <java.lang.System: java.io.PrintStream err>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:380), at java.lang.Throwable.printStackTrace(Throwable.java:634)]) => sink(java.lang.Throwable, printStackTrace, 634, $stack1 = <java.lang.System: java.io.PrintStream err>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.access$100(Synth.java:59), at com.mapr.synth.Synth.formatTemplate(Synth.java:380), at java.lang.Throwable.printStackTrace(Throwable.java:634)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 282, $stack7 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Format format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 282, $stack7 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Format format>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282)])

source(com.mapr.synth.Synth$ReportingWorker, generateFile, 282, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282)]) => sink(com.mapr.synth.Synth$ReportingWorker, generateFile, 282, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16[1] = $stack21, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 325, $stack16[1] = $stack21, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:325)])

source(com.mapr.synth.Synth$ReportingWorker, printXml, 306, $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:306)]) => sink(com.mapr.synth.Synth$ReportingWorker, printXml, 306, $stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:306)])

source(com.mapr.synth.Synth$ReportingWorker, printXml, 306, $stack2 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:306)]) => sink(com.mapr.synth.Synth$ReportingWorker, printXml, 306, $stack2 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:301), at com.mapr.synth.Synth$ReportingWorker.printXml(Synth$ReportingWorker.java:306)])

source(com.google.common.base.Joiner, <init>, 84, $stack3 = (java.lang.String) $stack2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71), at com.google.common.base.Joiner.<init>(Joiner.java:84)]) => sink(com.google.common.base.Joiner, <init>, 84, $stack3 = (java.lang.String) $stack2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71), at com.google.common.base.Joiner.<init>(Joiner.java:84)])

source(com.google.common.base.Joiner, <init>, 84, this.<com.google.common.base.Joiner: java.lang.String separator> = $stack3, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71), at com.google.common.base.Joiner.<init>(Joiner.java:84)]) => sink(com.google.common.base.Joiner, <init>, 84, this.<com.google.common.base.Joiner: java.lang.String separator> = $stack3, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:278), at com.mapr.synth.Synth.<clinit>(Synth.java:371), at com.google.common.base.Joiner.on(Joiner.java:71), at com.google.common.base.Joiner.<init>(Joiner.java:84)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 330, $stack10 = newarray (java.lang.Object)[0], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:330)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 330, $stack10 = newarray (java.lang.Object)[0], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:330)])

source(java.lang.Integer, valueOf, 832, $stack2 = <java.lang.Integer$IntegerCache: int high>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832)]) => sink(java.lang.Integer, valueOf, 832, $stack2 = <java.lang.Integer$IntegerCache: int high>, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832)])

source(java.lang.Integer, valueOf, 832, $stack1 = new java.lang.Integer, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832)]) => sink(java.lang.Integer, valueOf, 832, $stack1 = new java.lang.Integer, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.valueOf(Integer.java:832)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31 = newarray (java.lang.Object)[2], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31[0] = x, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)])

source(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31[1] = $stack34, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)]) => sink(com.mapr.synth.Synth$ReportingWorker, printDelimited, 319, $stack31[1] = $stack34, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at com.mapr.synth.Synth$ReportingWorker.generateFile(Synth$ReportingWorker.java:282), at com.mapr.synth.Synth$ReportingWorker.format(Synth$ReportingWorker.java:295), at com.mapr.synth.Synth$ReportingWorker.printDelimited(Synth$ReportingWorker.java:319)])

source(java.lang.Integer, <clinit>, 342, $stack2[10] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[10] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[4] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[4] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2 = newarray (char)[100], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2 = newarray (char)[100], [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[17] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[17] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[38] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[38] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[88] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[88] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[35] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[35] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[61] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[61] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[80] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[80] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[83] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[83] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[71] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[71] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[78] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[78] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[70] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[70] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[40] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[40] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[46] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[46] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[49] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[49] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[63] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[63] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[64] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[64] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[86] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[86] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[62] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[62] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[32] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[32] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[33] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[33] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[75] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[75] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[99] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[99] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[20] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[20] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[0] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[44] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[44] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[48] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[48] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[82] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[82] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[37] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[37] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[84] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[84] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[1] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[1] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[2] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[2] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[72] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[72] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[57] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[57] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[60] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[60] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[9] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[9] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[95] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[95] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[53] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[53] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[45] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[45] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[51] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[51] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[21] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[21] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[73] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[73] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[77] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[77] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[41] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[41] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[31] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[31] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[19] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[19] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[3] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[3] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[13] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[13] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[28] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[28] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[43] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[43] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[59] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[59] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[27] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[27] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[91] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[91] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[47] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[47] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[76] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[76] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[68] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[68] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[18] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[18] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[22] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[22] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[79] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[79] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[24] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[24] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[36] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[36] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[65] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[65] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[90] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[90] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[12] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[12] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[55] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[55] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[34] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[34] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[54] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[54] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[14] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[14] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[56] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[56] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[69] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[69] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[85] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[85] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, <java.lang.Integer: char[] DigitTens> = $stack2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, <java.lang.Integer: char[] DigitTens> = $stack2, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[25] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[25] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[39] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[39] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[15] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[15] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[5] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[5] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[97] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[97] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[42] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[42] = 52, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[92] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[92] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[96] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[96] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[58] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[58] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[16] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[16] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[50] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[50] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[30] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[30] = 51, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[6] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[6] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[7] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[7] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[8] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[8] = 48, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[23] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[23] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[29] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[29] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[81] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[81] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[94] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[94] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[26] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[26] = 50, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[66] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[66] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[11] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[11] = 49, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[87] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[87] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[89] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[89] = 56, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[74] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[74] = 55, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[93] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[93] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[52] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[52] = 53, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[98] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[98] = 57, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

source(java.lang.Integer, <clinit>, 342, $stack2[67] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)]) => sink(java.lang.Integer, <clinit>, 342, $stack2[67] = 54, [at com.mapr.synth.Synth$ReportingWorker.call(Synth$ReportingWorker.java:223), at java.lang.Integer.<clinit>(Integer.java:342)])

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack34 = new freemarker.template.SimpleHash,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = $stack34,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = $stack34, 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,return $stack0,17,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,return $stack2,124,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,tmp$869454818 = (java.io.IOException) e#2,-1,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, tmp$869454818 = (java.io.IOException) e#2, -1)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(),380,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0),505,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e#4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(sw#2, 0), 505)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>,506,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>, 506)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack34 = new freemarker.template.SimpleHash,355,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper),355,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack34.<freemarker.template.SimpleHash: void <init>(freemarker.template.ObjectWrapper)>(wrapper), 355)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack24 = newarray (java.lang.Object)[2],322,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack24),322,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack24), 322)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,return $stack33,372,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack80 = <java.lang.System: java.io.PrintStream out>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,out := @parameter3: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,out := @parameter4: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8),292,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)))

List(Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: ))

List(Node(<freemarker.core.Environment: void process()>,savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>(),228,SourceNode, path: (<freemarker.core.Environment: void process()>, savedEnv = virtualinvoke $stack4.<java.lang.ThreadLocal: java.lang.Object get()>(), 228)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv),245,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,return $stack1,177,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,return $stack1,319,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack16[1] = $stack21,325,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%s", $stack16),325,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s%s', $stack16), 325)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(),86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(), 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,return $stack2,124,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack10 = newarray (java.lang.Object)[0],330,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $stack10),330,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('\n', $stack10), 330)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<freemarker.core.Environment: void process()>,$stack15 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv>,245,SourceNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv),245,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack15.<java.lang.ThreadLocal: void set(java.lang.Object)>(savedEnv), 245)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack10 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>,1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack6 = new java.io.IOException,310,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e),310,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<freemarker.core.Environment: void process()>,$stack6 = <freemarker.core.Environment: java.lang.ThreadLocal threadEnv>,229,SourceNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,e = $stack5,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, e = $stack5, 309)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e),310,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, specialinvoke $stack6.<java.io.IOException: void <init>(java.lang.Throwable)>(e), 310)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x2 := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,$stack8 = newarray (java.lang.Object)[1],292,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $stack8),292,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, virtualinvoke out.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>('%s\n', $stack8), 292)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5),1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack6 == 0 goto $stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1881,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return $stack11,503,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if template == null goto writer#3 = 0,274,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,$stack2 = new java.util.LinkedHashMap,31,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(),31,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke $stack2.<java.util.LinkedHashMap: void <init>()>(), 31)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack80 = <java.lang.System: java.io.PrintStream out>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,out := @parameter3: java.io.PrintStream,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out),275,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack13 = virtualinvoke $stack10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack12), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack14 = virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" didn\'t convert "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack14 = virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' didn\'t convert '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack17 = virtualinvoke $stack14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack17 = virtualinvoke $stack14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack18 = virtualinvoke $stack17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to a TemplateHashModel. Generally, you want to use a Map<String, Object> or a "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to a TemplateHashModel. Generally, you want to use a Map<String, Object> or a '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JavaBean as the root-map (aka. data-model) parameter. The Map key-s or JavaBean "),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('JavaBean as the root-map (aka. data-model) parameter. The Map key-s or JavaBean '), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack20 = virtualinvoke $stack19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("property names will be the variable names in the template."),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack20 = virtualinvoke $stack19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('property names will be the variable names in the template.'), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack21 = virtualinvoke $stack20.<java.lang.StringBuffer: java.lang.String toString()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuffer: java.lang.String toString()>(), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21),365,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)))

List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),307,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>(),26,SinkNode, path: (<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>(), 26)))

List(Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,this := @this: com.fasterxml.jackson.databind.ObjectMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack11 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>, 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(),86,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fx = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>(), 86)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(),88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack17 = interfaceinvoke fx.<java.util.Iterator: java.lang.Object next()>(), 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,fieldName = (java.lang.String) $stack17,88,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, fieldName = (java.lang.String) $stack17, 88)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)))

List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer#3 = writer#3 + 1,281,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer#3 = writer#3 + 1, 281)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if writer#3 >= count goto return count,281,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,return this,310,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack4 = <com.mapr.synth.Synth$ReportingWorker: javax.xml.stream.XMLStreamWriter sw>,308,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("\n"),308,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack4.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>('\n'), 308)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack13 = new java.io.PrintWriter,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out),275,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, specialinvoke $stack13.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(out), 275)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: ))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,nc := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>,specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc),30,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319) => (<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>, specialinvoke this.<com.fasterxml.jackson.databind.node.ContainerNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(nc), 30)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel,359,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) wrappedDataModel, 359)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this),234,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void doAutoImportsAndIncludes(freemarker.core.Environment)>(this), 234)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack50 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.Synth$Options opts>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,opts := @parameter0: com.mapr.synth.Synth$Options,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw),501,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, sw#2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw), 501)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2),506,SinkNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, specialinvoke tmp$220689838.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter)>(e#4, $stack8, $stack7, $stack6, sw#2), 506)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack16 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x1 := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT>,1881,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,return $stack1,70,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,e#2 = $stack7,379,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e#2 = $stack7, 379)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,tmp$869454818 = (java.io.IOException) e#2,-1,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, tmp$869454818 = (java.io.IOException) e#2, -1)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(),380,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke tmp$869454818.<java.io.IOException: void printStackTrace()>(), 380)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.node.NullNode: com.fasterxml.jackson.databind.node.NullNode getInstance()>(),107,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 76)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack1,107,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,return r,99,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack33 = new freemarker.core.Environment,372,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this),229,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack6.<java.lang.ThreadLocal: void set(java.lang.Object)>(this), 229)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack81 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if template == null goto writer#3 = 0,274,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,return count,286,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModelHash = (freemarker.template.TemplateHashModel) dataModel,348,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, dataModelHash = (freemarker.template.TemplateHashModel) dataModel, 348)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),242,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 242)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7),1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack8 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1884,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>,282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack8 = opts.<com.mapr.synth.Synth$Options: com.mapr.synth.Synth$Quote quote>, 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,quoteConvention := @parameter1: com.mapr.synth.Synth$Quote,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack28 = virtualinvoke dataModel.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields),306,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,if value != null goto $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,306,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack7 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>,1884,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack8 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack7), 1884)) => Node(<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>,f := @parameter0: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack6 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack5), 1881)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,this := @this: com.fasterxml.jackson.databind.SerializationFeature,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332)) => Node(<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>,$stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(),377,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, virtualinvoke $stack73.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>($stack72), 239) => (<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)>, $stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(f), 1512) => (<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>, $stack4 = virtualinvoke feature.<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>(), 332) => (<com.fasterxml.jackson.databind.SerializationFeature: int getMask()>, $stack2 = virtualinvoke this.<com.fasterxml.jackson.databind.SerializationFeature: int ordinal()>(), 377)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,e = $stack8,377,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, e = $stack8, 377)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>(),378,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke e.<freemarker.template.TemplateException: void printStackTrace()>(), 378)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if i >= count goto (branch),277,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,this := @this: freemarker.core.Configurable,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>,880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237) => (<freemarker.core.Configurable: boolean getAutoFlush()>, $stack3 = this.<freemarker.core.Configurable: freemarker.core.Configurable parent>, 880)) => Node(<freemarker.core.Configurable: boolean getAutoFlush()>,$stack4 = virtualinvoke $stack3.<freemarker.core.Configurable: boolean getAutoFlush()>(),880,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,$stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(),237,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack9 = virtualinvoke this.<freemarker.core.Environment: boolean getAutoFlush()>(), 237)) => Node(<freemarker.core.Environment: void process()>,if $stack9 == 0 goto specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),237,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,this := @this: com.mapr.synth.samplers.FieldSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>,$stack1 = this.<com.mapr.synth.samplers.FieldSampler: boolean flattener>,93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(),89,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: boolean isFlat()>(), 89)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack18 == 0 goto $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),89,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if dataModel != null goto wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),354,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,$stack3 = <com.mapr.synth.Synth$ReportingWorker: com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper>,306,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,return $stack1,177,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields),301,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5),59,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack19 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19,96,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack20 = (com.fasterxml.jackson.databind.JsonNode) $stack19, 96)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20),96,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(fieldName, $stack20), 96)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(),1882,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()>(), 1882)))

List(Node(<com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>,$stack0 = <com.fasterxml.jackson.databind.util.EmptyIterator: com.fasterxml.jackson.databind.util.EmptyIterator instance>,17,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91) => (<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>, $stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(), 177)) => Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27),93,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack11 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 365)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.String getName()>(),365,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.String getName()>(), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack10 = new java.lang.StringBuffer,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(),364,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,this := @this: com.fasterxml.jackson.databind.node.JsonNodeFactory,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this),319,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85) => (<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>, specialinvoke $stack1.<com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(this), 319)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,virtualinvoke $stack3.<freemarker.core.Environment: void process()>(),262,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,names := @parameter1: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, l6 = interfaceinvoke names.<java.util.List: java.util.Iterator iterator()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,$stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(),316,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295) => (<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>, $stack9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>(), 316)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>,if $stack9 == 0 goto $stack10 = newarray (java.lang.Object)[0],316,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack25 == 0 goto (branch),91,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack10 = new java.lang.StringBuffer,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(),364,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack10.<java.lang.StringBuffer: void <init>()>(), 364)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,$stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack7 = virtualinvoke this.<freemarker.core.Environment: freemarker.template.Template getTemplate()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>,$stack1 = this.<freemarker.template.Template: freemarker.core.TemplateElement rootElement>,600,SimpleNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,$stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(),235,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack8 = virtualinvoke $stack7.<freemarker.template.Template: freemarker.core.TemplateElement getRootTreeNode()>(), 235)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8),235,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke this.<freemarker.core.Environment: void visit(freemarker.core.TemplateElement)>($stack8), 235)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1887,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config), 1887)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$220689838 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,506,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,return tmp$220689838,506,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,writer = $stack13,275,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, writer = $stack13, 275)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x5 := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,writer := @parameter5: java.io.PrintWriter,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,out := @parameter1: java.io.Writer,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out),372,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack33.<freemarker.core.Environment: void <init>(freemarker.template.Template,freemarker.template.TemplateHashModel,java.io.Writer)>(this, dataModelHash, out), 372)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,i = 0,277,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, i = i + 1, 277)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if i >= count goto (branch),277,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer),278,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)))

List(Node(<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>,$stack1 = staticinvoke <com.fasterxml.jackson.databind.util.EmptyIterator: java.util.Iterator instance()>(),177,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(),91,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, it = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fieldNames()>(), 91)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(),92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack26 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>(), 92)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,key = (java.lang.String) $stack26,92,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, key = (java.lang.String) $stack26, 92)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,fieldName := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if wrappedDataModel != null goto $stack9 = new java.lang.IllegalArgumentException,360,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value),1887,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke $stack9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(jgen, value), 1887)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(),1879,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, config = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>(), 1879)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config),1885,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(jgen, value, config), 1885)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer),376,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)))

List(Node(<freemarker.core.Environment: void process()>,$stack11 = this.<freemarker.core.Environment: java.io.Writer out>,238,SourceNode, path: (<freemarker.core.Environment: void process()>, $stack11 = this.<freemarker.core.Environment: java.io.Writer out>, 238)) => Node(<freemarker.core.Environment: void process()>,virtualinvoke $stack11.<java.io.Writer: void flush()>(),238,SinkNode, path: (<freemarker.core.Environment: void process()>, virtualinvoke $stack11.<java.io.Writer: void flush()>(), 238)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,names := @parameter2: java.util.List,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, "\t", out),295,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, '\t', out), 295)))

List(Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack10 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>,1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10),1888,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack11 = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>($stack10), 1888)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack11 == 0 goto return,1888,SinkNode, path: ))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>,87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack13 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List schema>, 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, l3 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack16 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,s = (com.mapr.synth.samplers.FieldSampler) $stack16,99,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, s = (com.mapr.synth.samplers.FieldSampler) $stack16, 99)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(),90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack23 = virtualinvoke s.<com.mapr.synth.samplers.FieldSampler: java.lang.Object sample()>(), 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,v = (com.fasterxml.jackson.databind.JsonNode) $stack23,90,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, v = (com.fasterxml.jackson.databind.JsonNode) $stack23, 90)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack79 = this.<com.mapr.synth.Synth$ReportingWorker: int localCount>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,count := @parameter4: int,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,if writer#3 >= count goto return count,281,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),87,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack15 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 87)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,if $stack15 == 0 goto return r,87,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,e = $stack9,502,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, e = $stack9, 502)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,tmp$2057834672 = (javax.xml.stream.XMLStreamException) e,-1,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, tmp$2057834672 = (javax.xml.stream.XMLStreamException) e, -1)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672),503,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>, $stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwXmlAsIOException(javax.xml.stream.XMLStreamException)>(tmp$2057834672), 503)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>,$stack11 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) $stack10,503,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value),209,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,this := @this: com.fasterxml.jackson.databind.node.ContainerNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>,76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307) => (<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>, $stack1 = this.<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>, 76)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>(),76,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, value = virtualinvoke this.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>(), 307)) => Node(<com.fasterxml.jackson.databind.node.ContainerNode: com.fasterxml.jackson.databind.node.NullNode nullNode()>,return $stack2,76,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,this := @this: com.fasterxml.jackson.databind.node.ObjectNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,$stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>,309,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, $stack3 = this.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>, 309)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>,$stack1 = this.<com.mapr.synth.samplers.SchemaSampler: java.util.List fields>,70,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack17 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack9 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: java.util.List getFieldNames()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out),282,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack26 = virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack25), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" converted "),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' converted '), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack30 = virtualinvoke $stack27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to null."),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(' to null.'), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack32 = virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.String toString()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack49 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ",", out),298,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printDelimited(com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.lang.String,java.io.PrintStream)>(quoteConvention, names, fields, ',', out), 298)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>,247,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack48 = this.<com.mapr.synth.Synth$ReportingWorker: freemarker.template.Template template>, 247)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,template := @parameter2: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x4 := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,temp := @parameter4: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,this := @this: freemarker.template.Template,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(),351,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrapper = virtualinvoke this.<freemarker.template.Template: freemarker.template.ObjectWrapper getObjectWrapper()>(), 351)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack24 = virtualinvoke wrapper.<java.lang.Object: java.lang.Class getClass()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(),362,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>(), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack23 = new java.lang.StringBuffer,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(),361,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack23.<java.lang.StringBuffer: void <init>()>(), 361)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack6 = dataModel instanceof freemarker.template.TemplateHashModel,347,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack6 = dataModel instanceof freemarker.template.TemplateHashModel, 347)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack6 == 0 goto (branch),347,SinkNode, path: ))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>,124,SourceNode, path: (<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>, $stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>, 124)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>,$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1,124,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, $stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>(), 208)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>,$stack1 = new com.fasterxml.jackson.databind.node.ObjectNode,319,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(), 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel),357,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, wrappedDataModel = interfaceinvoke wrapper.<freemarker.template.ObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>(dataModel), 357)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel,358,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, $stack8 = wrappedDataModel instanceof freemarker.template.TemplateHashModel, 358)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,if $stack8 == 0 goto (branch),358,SinkNode, path: ))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack9 = new java.lang.IllegalArgumentException,364,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21),365,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21), 365)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),278,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,x3 := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278)) => Node(<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,dataModel := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376)) => Node(<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>,$stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null),262,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, $stack3 = virtualinvoke this.<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>(dataModel, out, null), 262)) => Node(<freemarker.core.Environment: void process()>,this := @this: freemarker.core.Environment,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>($stack15, $stack16, $stack17, $stack18, template, writer), 278) => (<com.mapr.synth.Synth: void access$100(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, staticinvoke <com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>(x0, x1, x2, x3, x4, x5), 59) => (<com.mapr.synth.Synth: void formatTemplate(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,freemarker.template.Template,java.io.PrintWriter)>, virtualinvoke temp.<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>(fields, writer), 376) => (<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>, virtualinvoke $stack3.<freemarker.core.Environment: void process()>(), 262)) => Node(<freemarker.core.Environment: void process()>,specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(),232,SinkNode, path: (<freemarker.core.Environment: void process()>, specialinvoke this.<freemarker.core.Environment: void clearCachedValues()>(), 232)))

List(Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0),208,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, g = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w0), 208)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,jgen := @parameter0: com.fasterxml.jackson.core.JsonGenerator,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(),1889,SinkNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void flush()>(), 1889)))

List(Node(<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>,$stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>,223,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack82 = this.<com.mapr.synth.Synth$ReportingWorker: com.mapr.synth.samplers.SchemaSampler sampler>, 223)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,s := @parameter1: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,this := @this: com.mapr.synth.samplers.SchemaSampler,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>,85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack9 = this.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.node.JsonNodeFactory nodeFactory>, 85)) => Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,r = virtualinvoke $stack9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>(),85,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278)) => Node(<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>,$stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(),282,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack10 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>,fields := @parameter3: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282)) => Node(<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>,fields := @parameter0: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301)) => Node(<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>($stack7, $stack8, $stack9, $stack10, out), 282) => (<com.mapr.synth.Synth$ReportingWorker: void format(com.mapr.synth.Synth$Format,com.mapr.synth.Synth$Quote,java.util.List,com.fasterxml.jackson.databind.JsonNode,java.io.PrintStream)>, staticinvoke <com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>(fields), 301) => (<com.mapr.synth.Synth$ReportingWorker: void printXml(com.fasterxml.jackson.databind.JsonNode)>, virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>($stack2, fields), 306) => (<com.fasterxml.jackson.dataformat.xml.XmlMapper: void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)>, specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value), 209)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,$stack12 = value instanceof java.io.Closeable,1892,SourceNode, path: (<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>, $stack12 = value instanceof java.io.Closeable, 1892)) => Node(<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>,if $stack12 == 0 goto $stack9 = virtualinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(config),1892,SinkNode, path: ))

List(Node(<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>,$stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key),93,SourceNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, $stack27 = virtualinvoke v.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(key), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,value := @parameter1: com.fasterxml.jackson.databind.JsonNode,-1,SimpleNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93)) => Node(<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>,interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value),309,SinkNode, path: (<com.mapr.synth.Synth$ReportingWorker: java.lang.Integer call()>, $stack84 = staticinvoke <com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>($stack83, $stack82, $stack81, $stack80, $stack79), 223) => (<com.mapr.synth.Synth$ReportingWorker: int generateFile(com.mapr.synth.Synth$Options,com.mapr.synth.samplers.SchemaSampler,freemarker.template.Template,java.io.PrintStream,int)>, $stack18 = virtualinvoke s.<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>(), 278) => (<com.mapr.synth.samplers.SchemaSampler: com.fasterxml.jackson.databind.JsonNode sample()>, virtualinvoke r.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(key, $stack27), 93) => (<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>, interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, value), 309)))

List(Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,$stack22 = new java.lang.IllegalArgumentException,361,SourceNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)) => Node(<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>,specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32),362,SinkNode, path: (<freemarker.template.Template: freemarker.core.Environment createProcessingEnvironment(java.lang.Object,java.io.Writer,freemarker.template.ObjectWrapper)>, specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack32), 362)))

