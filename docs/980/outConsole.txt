Running soot scenario burst;com.squareup.burst.BurstAndroid;explodeSuite(TestSuite, TestSuite);08629234e54b58a5477fe85f3cb7ddc115e343db
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,52600
Time to perform Confluence 1 Inter 0,69100
Configure Soot Confluence 2 Inter 0,12000
Time to perform Confluence 2 Inter 0,30200
Visited methods: 30
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name),18,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57) => (<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>, specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name), 18))
SINK=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44),54,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44), 54)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l14 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Method)>(method),55,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l14 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Method)>(method), 55)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,methodArgs = l14[l16],66,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, methodArgs = l14[l16], 66)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name),18,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57) => (<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>, specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name), 18)), SOURCE=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs),57,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57))
SINK=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44),54,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44), 54)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs),57,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57))]
Confluence interference in <com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>
Confluence flows from execution of lines 56 and 44 to line 57, defined in name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs) and classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>() and used in specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs)
Caused by line 56 flow: path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)
Caused by line 44 flow: path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)
Caused by line 57 flow: path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57) => (<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>, specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name), 18)
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,71100
Runtime: 0.009s
Time to perform OA Inter 0,76100
OA Inter Visited methods: 2
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51200
Time to perform DFP Inter 0,61900
Depth limit: 5
CONFLICTS: []
Visited methods: 15
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51900
Time to perform DFP Inter 0,64200
Depth limit: 5
CONFLICTS: DF interference in <com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>
Data flows from execution of line 44 to 56, defined in $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation> and propagated in name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs)
Caused by line 44 flow: path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>, 44)
Caused by line 56 flow: path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)
[List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>, 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack21 = virtualinvoke $stack20.<android.app.Instrumentation: android.content.Context getTargetContext()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack21 = virtualinvoke $stack20.<android.app.Instrumentation: android.content.Context getTargetContext()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructorArgs = l6[l8],68,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructorArgs = l6[l8], 68)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)))]
Visited methods: 15
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53300
Time to perform PDG 0,54400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/burst/08629234e54b58a5477fe85f3cb7ddc115e343db/original-without-dependencies/burst-android-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,38600
Time to perform PDG 0,59800
CONFLICTS: [List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l7 = lengthof l6,48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l7 = lengthof l6, 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l8 >= l7 goto return,48,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(),50,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(), 50)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack28 == 0 goto l8 = l8 + 1,50,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack32 == 0 goto $stack33 = test instanceof junit.framework.TestSuite,52,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l16 >= l15 goto (branch),55,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(), 56))), List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack19 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,40,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack19 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>, 40)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack19 != null goto $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,40,SourceNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l7 = lengthof l6,48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l7 = lengthof l6, 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l8 >= l7 goto return,48,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(),50,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(), 50)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack28 == 0 goto l8 = l8 + 1,50,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack32 == 0 goto $stack33 = test instanceof junit.framework.TestSuite,52,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l16 >= l15 goto (branch),55,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(), 56)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
