SOURCE=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name),18,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57) => (<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>, specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name), 18))
SINK=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44),54,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44), 54)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l14 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Method)>(method),55,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l14 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Method)>(method), 55)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,methodArgs = l14[l16],66,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, methodArgs = l14[l16], 66)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57)) => Node(<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>,specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name),18,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57) => (<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>, specialinvoke this.<junit.framework.TestCase: void <init>(java.lang.String)>(name), 18))

SOURCE=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs),57,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1740708279.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57))
SINK=>BASE: Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44),54,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, method = virtualinvoke testClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($stack43, $stack44), 54)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs),57,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, specialinvoke tmp$1839613624.<com.squareup.burst.BurstTestCase: void <init>(java.lang.String,java.lang.reflect.Constructor,java.lang.Object[],java.lang.reflect.Method,java.lang.Object[])>(name, constructor, constructorArgs, method, methodArgs), 57))

List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>, 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack21 = virtualinvoke $stack20.<android.app.Instrumentation: android.content.Context getTargetContext()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack21 = virtualinvoke $stack20.<android.app.Instrumentation: android.content.Context getTargetContext()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructorArgs = l6[l8],68,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructorArgs = l6[l8], 68)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, name = staticinvoke <com.squareup.burst.Burst: java.lang.String explodedName(java.lang.String,java.lang.Object[],java.lang.Object[])>($stack47, constructorArgs, methodArgs), 56)))

List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(),44,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, classLoader = virtualinvoke $stack21.<android.content.Context: java.lang.ClassLoader getClassLoader()>(), 44)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l7 = lengthof l6,48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l7 = lengthof l6, 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l8 >= l7 goto return,48,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(),50,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(), 50)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack28 == 0 goto l8 = l8 + 1,50,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack32 == 0 goto $stack33 = test instanceof junit.framework.TestSuite,52,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l16 >= l15 goto (branch),55,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(), 56)))

List(Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack19 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,40,SourceNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack19 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>, 40)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack19 != null goto $stack20 = this.<com.squareup.burst.BurstAndroid: android.app.Instrumentation instrumentation>,40,SourceNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23),45,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, testClass = virtualinvoke classLoader.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($stack23), 45)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass),46,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, constructor = staticinvoke <com.squareup.burst.Burst: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(testClass), 46)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor),48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l6 = staticinvoke <com.squareup.burst.Burst: java.lang.Object[][] explodeArguments(java.lang.reflect.Constructor)>(constructor), 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,l7 = lengthof l6,48,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, l7 = lengthof l6, 48)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l8 >= l7 goto return,48,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(),50,SimpleNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack28 = interfaceinvoke testEnumerator.<java.util.Enumeration: boolean hasMoreElements()>(), 50)) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack28 == 0 goto l8 = l8 + 1,50,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if $stack32 == 0 goto $stack33 = test instanceof junit.framework.TestSuite,52,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,if l16 >= l15 goto (branch),55,SimpleNode, path: ) => Node(<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>,$stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(),56,SinkNode, path: (<com.squareup.burst.BurstAndroid: void explodeSuite(junit.framework.TestSuite,junit.framework.TestSuite)>, $stack47 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>(), 56)))

