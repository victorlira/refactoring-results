Running soot scenario xdi2;xdi2.core.syntax.CloudName;isValid(XDIAddress);eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,48900
Time to perform Confluence 1 Inter 0,83900
Configure Soot Confluence 2 Inter 0,23000
Time to perform Confluence 2 Inter 0,27000
Visited methods: 22
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39))
SINK=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,39,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)), SOURCE=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(), 49))
SINK=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,39,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") --> "),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') --> '), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101), 49)), SOURCE=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(), 49))
SINK=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,40,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 40)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") --> "),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') --> '), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>(), 49)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101),49,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101), 49)), SOURCE=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39))
SINK=>BASE: Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,40,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 40)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39))]
Confluence interference in <xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>
Confluence flows from execution of lines 41 and 39 to line 39, defined in l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and used in i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>()
Caused by line 41 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)
Caused by line 39 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)
Caused by line 39 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)
Confluence interference in <xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>
Confluence flows from execution of lines 41 and 39 to line 49, defined in l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and used in interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101)
Caused by line 41 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)
Caused by line 39 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)
Caused by line 49 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101), 49)
Confluence interference in <xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>
Confluence flows from execution of lines 41 and 40 to line 49, defined in l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>() and used in interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101)
Caused by line 41 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)
Caused by line 40 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 40)
Caused by line 49 flow: path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, interfaceinvoke $stack96.<org.slf4j.Logger: void trace(java.lang.String)>($stack101), 49)
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,89500
Runtime: 0.027s
Time to perform OA Inter 1,22300
OA Inter Visited methods: 10
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,64100
Time to perform DFP Inter 0,92700
Depth limit: 5
CONFLICTS: []
Visited methods: 11
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,62700
Time to perform DFP Inter 0,92700
Depth limit: 5
CONFLICTS: []
Visited methods: 11
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,60100
Time to perform PDG 0,89900
CONFLICTS: [List(Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(),41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack22 != 0 goto result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack34 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack34 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack34 != 0 goto $stack35 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,41,SourceNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack37 = virtualinvoke $stack35.<java.lang.Character: boolean equals(java.lang.Object)>($stack36),42,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack37 = virtualinvoke $stack35.<java.lang.Character: boolean equals(java.lang.Object)>($stack36), 42)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack37 != 0 goto i#3 = i#3 + 1,42,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack41 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack41 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack42 = virtualinvoke $stack40.<java.lang.Character: boolean equals(java.lang.Object)>($stack41),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack42 = virtualinvoke $stack40.<java.lang.Character: boolean equals(java.lang.Object)>($stack41), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack42 != 0 goto i#3 = i#3 + 1,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack45 = virtualinvoke $stack43.<java.lang.Character: boolean equals(java.lang.Object)>($stack44),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack45 = virtualinvoke $stack43.<java.lang.Character: boolean equals(java.lang.Object)>($stack44), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack45 != 0 goto i#3 = i#3 + 1,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack7 = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: int getNumXDIArcs()>(),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack7 = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: int getNumXDIArcs()>(), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if i#3 >= $stack7 goto result = <java.lang.Boolean: java.lang.Boolean TRUE>,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,XDIarc = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: xdi2.core.syntax.XDIArc getXDIArc(int)>(i#3),37,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, XDIarc = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: xdi2.core.syntax.XDIArc getXDIArc(int)>(i#3), 37)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack21 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isCollection()>(),40,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack21 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isCollection()>(), 40)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack21 == 0 goto $stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(),40,SinkNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(),48,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 48)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,return l4,40,SinkNode, path: )), List(Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(),41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack22 != 0 goto result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SourceNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack34 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),41,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack34 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack34 != 0 goto $stack35 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,41,SourceNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack37 = virtualinvoke $stack35.<java.lang.Character: boolean equals(java.lang.Object)>($stack36),42,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack37 = virtualinvoke $stack35.<java.lang.Character: boolean equals(java.lang.Object)>($stack36), 42)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack37 != 0 goto i#3 = i#3 + 1,42,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack41 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack41 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack42 = virtualinvoke $stack40.<java.lang.Character: boolean equals(java.lang.Object)>($stack41),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack42 = virtualinvoke $stack40.<java.lang.Character: boolean equals(java.lang.Object)>($stack41), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack42 != 0 goto i#3 = i#3 + 1,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack45 = virtualinvoke $stack43.<java.lang.Character: boolean equals(java.lang.Object)>($stack44),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack45 = virtualinvoke $stack43.<java.lang.Character: boolean equals(java.lang.Object)>($stack44), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack45 != 0 goto i#3 = i#3 + 1,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack7 = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: int getNumXDIArcs()>(),35,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack7 = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: int getNumXDIArcs()>(), 35)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if i#3 >= $stack7 goto result = <java.lang.Boolean: java.lang.Boolean TRUE>,35,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,XDIarc = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: xdi2.core.syntax.XDIArc getXDIArc(int)>(i#3),37,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, XDIarc = virtualinvoke XDIaddress.<xdi2.core.syntax.XDIAddress: xdi2.core.syntax.XDIArc getXDIArc(int)>(i#3), 37)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack20 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isAttribute()>(),39,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack20 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isAttribute()>(), 39)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack20 == 0 goto $stack21 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isCollection()>(),39,SinkNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,40,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 40)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") --> "),39,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') --> '), 39)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result),39,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result), 39)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48400
Time to perform PDG 0,90600
CONFLICTS: [List(Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack21 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isCollection()>(),40,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack21 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isCollection()>(), 40)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack21 == 0 goto $stack22 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasXRef()>(),40,SourceNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack22 != 0 goto result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SinkNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack25 = interfaceinvoke $stack24.<org.slf4j.Logger: boolean isTraceEnabled()>(),48,SimpleNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack25 = interfaceinvoke $stack24.<org.slf4j.Logger: boolean isTraceEnabled()>(), 48)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,if $stack25 == 0 goto return l4,48,SimpleNode, path: ) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isValid("),41,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('isValid('), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(XDIaddress),41,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(XDIaddress), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") --> "),41,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') --> '), 41))), List(Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,39,SourceNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, i = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 39)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,result = <java.lang.Boolean: java.lang.Boolean FALSE>,41,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, l4 = virtualinvoke result.<java.lang.Boolean: boolean booleanValue()>(), 41)) => Node(<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>,$stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") --> "),41,SinkNode, path: (<xdi2.core.syntax.CloudName: boolean isValid(xdi2.core.syntax.XDIAddress)>, $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(') --> '), 41)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
